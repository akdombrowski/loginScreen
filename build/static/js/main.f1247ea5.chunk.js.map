{"version":3,"sources":["logo.png","config.js","sdk/helpers.js","sdk/index.js","sdk/api.js","sdk/actions.js","components/DragNDrop/ItemTypes.js","components/DragNDrop/Box.js","components/DragNDrop/DraggableBox.js","components/DragNDrop/snapToGrid.js","components/DragNDrop/Container.js","components/DragNDrop/BoxDragPreview.js","components/DragNDrop/CustomDragLayer.js","components/DragNDrop/Example.js","components/DragNDrop/DragNDrop.js","components/InputForm/EmailInput.js","components/InputForm/PasswordInput.js","components/SignInPage.js","components/userLogin.jsx","components/usernameValidator.jsx","components/forgotPassword.jsx","components/message.jsx","components/updatePassword.jsx","components/recoveryCodeAndPassword.jsx","components/registration.jsx","components/verificationCode.jsx","components/auth.jsx","containers/container.js","reducers/index.js","index.js"],"names":["module","exports","common","branding","logo","require","config","AUTH","API","process","REACT_APP_STAGE","RequiredProperties","minCharCheck","password","charSet","min","count","_","sumBy","char","includes","console","log","validate","passwordPolicy","policyCriterion","maxRepeatedCharCount","get","length","i","currentChar","currentCharCount","j","minUniqueCharCount","Set","each","add","size","lengthValidationRequirements","max","minComplexity","bigInt","times","hasLowerLetter","hasUpperLetter","hasDigit","hasSymbol","hasOther","searchSpaceDepth","searchSpaceSize","guessesForLength","pow","compare","passwordRequirementsValidator","newPassword","clientValidatedRequirements","filter","keys","policy","minCharReqs","key","value","push","map","policyName","name","isValid","getServerValidatedRequirementMessage","failedReq","historyCount","generateRequirementsTooltip","flow","icon","className","style","color","getPasswordPolicyMessage","getURLParameter","paramName","decomposeUrl","window","location","href","queryParams","url","a","document","createElement","host","pathname","search","parseQueryParams","hash","searchStr","params","replace","split","returnVal","forEach","param","paramSplit","STATUS","SUCCESS","UNAUTHORIZED","COMPLETED","USERNAME_PASSWORD_REQUIRED","PASSWORD_REQUIRED","INVALID_CREDENTIALS","NO_PASSWORD","PASSWORD_EXPIRED","PASSWORD_LOCKED_OUT","MUST_CHANGE_PASSWORD","PASSWORD_REQUIREMENTS_NOT_MET","VERIFICATION_CODE_REQUIRED","RECOVERY_CODE_REQUIRED","INVALID_VALUE","UNIQUENESS_VIOLATION","UNKNOWN","FAILED","Flow","id","status","_links","_embedded","resumeUrl","this","links","embedded","isEqual","user","requirement","generatePasswordPolicyMessage","maxRepeatedCharacters","minUniqueCharacters","minNumeric","minLower","minUpper","minSpecial","pingPost","apiPath","contentType","body","post","Promise","resolved","rejected","request","withCredentials","send","set","end","err","res","getBody","headers","req","getBaseApiUrl","useAuthUrl","environmentId","flowId","flowUrl","username","currentPassword","recoveryCode","email","verificationCode","types","UPDATE_FLOW","UNRECOVERABLE_ERROR","updateFlowAction","result","isAuthenticated","message","type","payload","updateFlow","dispatch","getFlow","api","then","resolve","resetFlow","signOn","forgotPassword","sendRecoveryCode","recoverUserPassword","changeUserPassword","sendVerificationCode","verifyUser","registerUser","ItemTypes","styles","padding","cursor","height","width","Box","img","backgroundColor","yellow","src","getStyles","props","left","top","isDragging","transform","position","maxWidth","maxHeight","WebkitTransform","opacity","DraggableBox","connectDragPreview","getEmptyImage","captureDraggingState","connectDragSource","React","PureComponent","DragSource","beginDrag","title","connect","monitor","dragSource","dragPreview","snapToGrid","x","y","Math","round","Container","arguments","state","boxes","connectDropTarget","Object","renderBox","setState","update","$merge","item","DropTarget","drop","component","delta","getDifferenceFromInitialOffset","getItem","moveBox","dropTarget","display","BoxDragPreview","useState","tickTock","useEffect","layerStyles","pointerEvents","zIndex","getItemStyles","initialOffset","currentOffset","DragLayer","itemType","getItemType","getInitialSourceClientOffset","getSourceClientOffset","renderItem","Example","snapToGridAfterDrop","snapToGridWhileDragging","DragNDrop","file","setFile","classes","makeStyles","theme","root","dropzoneArea","palette","grey","backgroundSize","backgroundPosition","alignItems","justifyContent","dropzoneAreaText","fontSize","image","backgroundImage","backgroundRepeat","paper","margin","spacing","flexDirection","avatar","secondary","main","form","marginTop","submit","useStyles","onDrop","useCallback","acceptedFiles","newFile","uploadedFileUrl","URL","createObjectURL","disableGutters","Grid","container","wrap","justify","xs","overflow","dropzoneClass","dropzoneParagraphClass","showPreviews","showPreviewsInDropzone","filesLimit","maxFileSize","dropzoneText","DndProvider","backend","HTML5Backend","EmailInput","TextField","variant","required","fullWidth","label","autoComplete","autoFocus","onChange","handleUsernameUpdate","handlePasswordUpdate","Copyright","Typography","align","Link","Date","getFullYear","SignInPage","handleSubmit","handleForgotPassword","handleRegister","handlePasswordReset","CssBaseline","sm","md","lg","xl","Paper","elevation","square","Avatar","noValidate","FormControlLabel","control","Checkbox","Button","data-id","onClick","mt","UserLogin","isSubmitting","redirect","bind","handleResetFlow","event","target","authActions","spinnerMessage","errorMessage","isCompleted","assign","validatePasswordUrl","getLinks","newflow","catch","errorDetail","secondsUntilUnlock","timeUntilUnlockMsg","floor","to","PATH","UNABLE_TO_SIGN_IN","resetFlowUrl","from","SIGN_ON","FORGOT_PASSWORD_USERNAME","REGISTER","CHANGE_PASSWORD","alert","isError","content","isPasswordExpired","Component","UsernameValidator","doSubmit","doCancel","preventDefault","handleCancel","children","onSubmit","placeholder","disabled","defaultProps","ForgotPassword","forgotPasswordUrl","error","validator","Message","messageType","PasswordEditor","newPasswordVerify","isValidatingCredentials","saveAttempted","newPasswordFocused","handleCurrentPasswordUpdate","handleNewPasswordUpdate","handleNewPasswordVerifyUpdate","showTooltipReqs","hideTooltipReqs","changePasswordUrl","reject","Error","errorTarget","getPasswordPolicy","feedbackMessage","requirementsMet","reduce","requirementsTooltip","doPasswordsDiffer","onFocus","onBlur","RecoveryCodeAndPasswordForm","isResending","handleRecoveryCodeUpdate","handleResend","sendRecoveryCodeUrl","newLoginFlow","isRecoveryCodeRequired","RECOVERY_CODE_AND_PASSWORD","recoverPasswordUrl","newFlow","RegistrationForm","passwordVerify","isRegistering","passwordFocused","handleEmailUpdate","handlePasswordVerifyUpdate","handleSignInClick","registrationLink","isReady","maxLength","VerificationCode","isVerifying","handleResendEmail","handleVerificationCodeUpdate","verifyLink","sendVerificationCodeHref","EXPIRED","VERIFY","STATUS_TO_COMPATIBLE_PATHS","Auth","uuidRegex","JSON","parse","decodeURIComponent","test","authState","isFailed","history","replaceState","currentViewPath","some","path","startsWith","exact","render","routeProps","MessageBlock","withRouter","actions","initialState","auth","action","devToolsExtension","__REDUX_DEVTOOLS_EXTENSION__","f","store","compose","applyMiddleware","thunk","freeze","createStore","composeStore","combineReducers","reducer","getElementById"],"mappings":"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","file":"static/js/main.f1247ea5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.b15fcf97.png\";","const common = {\r\n  branding: {\r\n    logo: require('./logo.png')\r\n  }\r\n};\r\n\r\nconst stg = {\r\n  AUTH: 'https://auth-staging.pingone.com',\r\n  API: 'https://api-staging.pingone.com/v1/environments'\r\n};\r\n\r\nconst prod = {\r\n  AUTH: 'https://auth.pingone.com',\r\n  API: 'https://api.pingone.com/v1/environments'\r\n};\r\n\r\n// Default to prod if not set\r\nlet config = prod;\r\nif (process.env.REACT_APP_STAGE === 'stg') {\r\n  config = stg;\r\n}\r\n\r\nexport default {\r\n  // Add common config values here\r\n  ...common,\r\n  ...config\r\n};\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport bigInt from \"big-integer\";\r\n\r\nexport const RequiredProperties = {\r\n  MAX_REPEATED_CHARACTERS: \"maxRepeatedCharacters\",\r\n  MIN_UNIQUE_CHARACTERS: \"minUniqueCharacters\",\r\n  LENGTH: \"length\",\r\n  MIN_CHARACTERS: \"minCharacters\",\r\n  MIN_LOWERCASE: \"abcdefghijklmnopqrstuvwxyz\",\r\n  MIN_UPPERCASE: \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\",\r\n  MIN_NUMERIC: \"0123456789\",\r\n  MIN_SPECIAL: \"~!@#$%^&*()-_=+[]{}|;:,.<>/?\",\r\n  MIN_COMPLEXITY: \"minComplexity\",\r\n};\r\n\r\nconst minCharCheck = (password, charSet, min) => {\r\n  const count = _.sumBy(password, (char) =>\r\n    _.includes(charSet, char) ? 1 : 0\r\n  );\r\n  console.log(charSet);\r\n  console.log(\"count >= min\");\r\n  console.log(count + \" >= \" + min);\r\n  return count >= min;\r\n};\r\n\r\nexport const validate = (passwordPolicy, policyCriterion, password) => {\r\n  switch (policyCriterion) {\r\n    case RequiredProperties.MAX_REPEATED_CHARACTERS: {\r\n      const maxRepeatedCharCount = _.get(passwordPolicy, policyCriterion);\r\n      if (password.length < maxRepeatedCharCount) {\r\n        return false;\r\n      }\r\n\r\n      for (let i = 0; i < password.length; i += 1) {\r\n        const currentChar = password[i];\r\n        let currentCharCount = 1;\r\n        for (let j = i + 1; j < password.length; j += 1) {\r\n          if (password[j] !== currentChar) {\r\n            break;\r\n          }\r\n\r\n          currentCharCount += 1;\r\n\r\n          if (currentCharCount > maxRepeatedCharCount) {\r\n            return false;\r\n          }\r\n        }\r\n      }\r\n\r\n      return true;\r\n    }\r\n    case RequiredProperties.MIN_UNIQUE_CHARACTERS: {\r\n      const minUniqueCharCount = _.get(passwordPolicy, policyCriterion);\r\n      const count = new Set();\r\n      _.each(password, (char) => {\r\n        count.add(char);\r\n      });\r\n      return count.size >= minUniqueCharCount;\r\n    }\r\n    case RequiredProperties.LENGTH: {\r\n      const lengthValidationRequirements = _.get(\r\n        passwordPolicy,\r\n        policyCriterion\r\n      );\r\n      return (\r\n        password.length >= lengthValidationRequirements.min &&\r\n        password.length <= lengthValidationRequirements.max\r\n      );\r\n    }\r\n    case RequiredProperties.MIN_NUMERIC: {\r\n      return minCharCheck(\r\n        password,\r\n        RequiredProperties.MIN_NUMERIC,\r\n        _.get(passwordPolicy, [\r\n          RequiredProperties.MIN_CHARACTERS,\r\n          RequiredProperties.MIN_NUMERIC,\r\n        ])\r\n      );\r\n    }\r\n    case RequiredProperties.MIN_LOWERCASE: {\r\n      return minCharCheck(\r\n        password,\r\n        RequiredProperties.MIN_LOWERCASE,\r\n        _.get(passwordPolicy, [\r\n          RequiredProperties.MIN_CHARACTERS,\r\n          RequiredProperties.MIN_LOWERCASE,\r\n        ])\r\n      );\r\n    }\r\n    case RequiredProperties.MIN_UPPERCASE: {\r\n      return minCharCheck(\r\n        password,\r\n        RequiredProperties.MIN_UPPERCASE,\r\n        _.get(passwordPolicy, [\r\n          RequiredProperties.MIN_CHARACTERS,\r\n          RequiredProperties.MIN_UPPERCASE,\r\n        ])\r\n      );\r\n    }\r\n    case RequiredProperties.MIN_SPECIAL: {\r\n      return minCharCheck(\r\n        password,\r\n        RequiredProperties.MIN_SPECIAL,\r\n        _.get(passwordPolicy, [\r\n          RequiredProperties.MIN_CHARACTERS,\r\n          RequiredProperties.MIN_SPECIAL,\r\n        ])\r\n      );\r\n    }\r\n    case RequiredProperties.MIN_COMPLEXITY: {\r\n      const guessesPerSecond = 100000000000;\r\n      const secondsInSevenDays = 604800;\r\n      const minComplexity = bigInt(guessesPerSecond).times(secondsInSevenDays);\r\n      if (password.length === 0) {\r\n        return 0;\r\n      }\r\n\r\n      // Determine the search space depth for the password.  If the password\r\n      // contains any characters from outside the four defined character sets\r\n      // (lowercase ASCII letters, uppercase ASCII letters, ASCII digits, and\r\n      // ASCII symbols), then the depth is automatically 256.  Otherwise, the\r\n      // depth is the num of the number of characters in each set contained in the\r\n      // password.\r\n      let hasLowerLetter = false;\r\n      let hasUpperLetter = false;\r\n      let hasDigit = false;\r\n      let hasSymbol = false;\r\n      let hasOther = false;\r\n      _.each(password, (char) => {\r\n        if (char >= \"a\" && char <= \"z\") {\r\n          hasLowerLetter = true;\r\n        } else if (char >= \"A\" && char <= \"Z\") {\r\n          hasUpperLetter = true;\r\n        } else if (char >= \"0\" && char <= \"9\") {\r\n          hasDigit = true;\r\n        } else if (char >= \" \" && char <= \"~\") {\r\n          hasSymbol = true;\r\n        } else {\r\n          hasOther = true;\r\n          return false;\r\n        }\r\n\r\n        return true;\r\n      });\r\n\r\n      // Determine the search space depth for the password.  If the password\r\n      // contains any characters from outside the four defined character sets\r\n      // (lowercase ASCII letters, uppercase ASCII letters, ASCII digits, and\r\n      // ASCII symbols), then the depth is automatically 256.  Otherwise, the\r\n      // depth is the num of the number of characters in each set contained in the\r\n      // password.\r\n      let searchSpaceDepth = 0;\r\n      if (hasOther) {\r\n        searchSpaceDepth = 256;\r\n      } else {\r\n        if (hasLowerLetter) {\r\n          searchSpaceDepth += 26;\r\n        }\r\n\r\n        if (hasUpperLetter) {\r\n          searchSpaceDepth += 26;\r\n        }\r\n\r\n        if (hasDigit) {\r\n          searchSpaceDepth += 10;\r\n        }\r\n\r\n        if (hasSymbol) {\r\n          searchSpaceDepth += 33;\r\n        }\r\n      }\r\n\r\n      let searchSpaceSize = bigInt(0);\r\n      for (let i = 1; i <= password.length; i += 1) {\r\n        const guessesForLength = bigInt(searchSpaceDepth).pow(i);\r\n        searchSpaceSize = searchSpaceSize.add(guessesForLength);\r\n      }\r\n\r\n      return searchSpaceSize.compare(minComplexity) > -1; // -1 means searchSpaceSize < minComplexity, 0 means =, 1 means >\r\n    }\r\n    default: {\r\n      return false;\r\n    }\r\n  }\r\n};\r\n\r\nexport const passwordRequirementsValidator = (passwordPolicy, newPassword) => {\r\n  const clientValidatedRequirements = _.filter(\r\n    _.keys(passwordPolicy),\r\n    (policy) =>\r\n      policy === RequiredProperties.MAX_REPEATED_CHARACTERS ||\r\n      policy === RequiredProperties.MIN_UNIQUE_CHARACTERS ||\r\n      policy === RequiredProperties.MIN_COMPLEXITY ||\r\n      policy === RequiredProperties.LENGTH\r\n  );\r\n\r\n  console.log(passwordPolicy);\r\n  // special handling to flatten minChars so each can be validated separately\r\n  const minCharReqs = _.get(passwordPolicy, RequiredProperties.MIN_CHARACTERS);\r\n  _.each(minCharReqs, (key, value) =>\r\n    clientValidatedRequirements.push(`${value}`)\r\n  );\r\n\r\n  console.log(clientValidatedRequirements);\r\n  const errors = _.map(clientValidatedRequirements, (policyName) => ({\r\n    name: policyName,\r\n    isValid: validate(passwordPolicy, policyName, newPassword),\r\n  }));\r\n\r\n  return errors;\r\n};\r\n\r\nexport const getServerValidatedRequirementMessage = (\r\n  failedReq,\r\n  passwordPolicy\r\n) => {\r\n  switch (failedReq) {\r\n    case \"history\": {\r\n      const historyCount = _.get(passwordPolicy, \"history.count\", null);\r\n\r\n      // Fallback if for whatever reason we cannot load history.count\r\n      if (historyCount === null) {\r\n        return \"Password must not be similar to your prevous passwords\";\r\n      }\r\n\r\n      return `Password cannot be the same or similar to your previous ${historyCount} passwords.`;\r\n    }\r\n    case \"excludesProfileData\":\r\n      return \"Password cannot contain information from your user profile.\";\r\n    case \"notSimilarToCurrent\":\r\n      return \"Password cannot be similar to your current password.\";\r\n    case \"excludesCommonlyUsed\":\r\n      return \"Password must not be a commonly used password.\";\r\n    case \"minComplexity\":\r\n      return \"Password does not meet minimum complexity requirements.\";\r\n    default:\r\n      return \"Password does not meet requirements.\";\r\n  }\r\n};\r\n\r\nexport const generateRequirementsTooltip = (\r\n  clientValidatedRequirements,\r\n  flow\r\n) =>\r\n  _.map(clientValidatedRequirements, (policy) => {\r\n    const icon = policy.isValid ? (\r\n      <i className=\"fa fa-check\" style={{ color: \"green\" }}></i>\r\n    ) : (\r\n      <i className=\"fa fa-warning\" style={{ color: \"red\" }}></i>\r\n    );\r\n\r\n    return (\r\n      <div key={policy.name} className=\"requirement\">\r\n        {icon}\r\n        <span className=\"requirement__name\">\r\n          {flow.getPasswordPolicyMessage(policy)}\r\n        </span>\r\n      </div>\r\n    );\r\n  });\r\n\r\nexport const getURLParameter = (paramName) => {\r\n  const urlParts = decomposeUrl(window.location.href);\r\n  return urlParts.queryParams[paramName];\r\n};\r\n\r\nconst decomposeUrl = (url) => {\r\n  if (!url) {\r\n    return {};\r\n  }\r\n\r\n  const a = document.createElement(\"a\");\r\n  a.href = url;\r\n\r\n  return {\r\n    host: a.host,\r\n    pathname: a.pathname,\r\n    search: a.search,\r\n    queryParams: parseQueryParams(a.search),\r\n    hash: a.hash,\r\n  };\r\n};\r\n\r\nconst parseQueryParams = (searchStr) => {\r\n  const str = searchStr.replace(/^\\?/, \"\");\r\n  const params = str.split(\"&\");\r\n\r\n  const returnVal = {};\r\n\r\n  _.forEach(params, (param) => {\r\n    const paramSplit = param.split(\"=\");\r\n    returnVal[paramSplit[0]] = paramSplit[1];\r\n  });\r\n\r\n  return returnVal;\r\n};\r\n","import _ from \"lodash\";\r\n\r\nimport { RequiredProperties } from \"./helpers\";\r\n\r\nexport const STATUS = {\r\n  SUCCESS: \"SUCCESS\",\r\n  UNAUTHORIZED: \"UNAUTHORIZED\",\r\n\r\n  COMPLETED: \"COMPLETED\",\r\n  USERNAME_PASSWORD_REQUIRED: \"USERNAME_PASSWORD_REQUIRED\",\r\n  PASSWORD_REQUIRED: \"PASSWORD_REQUIRED\",\r\n  INVALID_CREDENTIALS: \"INVALID_CREDENTIALS\",\r\n  NO_PASSWORD: \"NO_PASSWORD\",\r\n  PASSWORD_EXPIRED: \"PASSWORD_EXPIRED\",\r\n  PASSWORD_LOCKED_OUT: \"PASSWORD_LOCKED_OUT\",\r\n  MUST_CHANGE_PASSWORD: \"MUST_CHANGE_PASSWORD\",\r\n  PASSWORD_REQUIREMENTS_NOT_MET: \"PASSWORD_REQUIREMENTS_NOT_MET\",\r\n  VERIFICATION_CODE_REQUIRED: \"VERIFICATION_CODE_REQUIRED\",\r\n  RECOVERY_CODE_REQUIRED: \"RECOVERY_CODE_REQUIRED\",\r\n  INVALID_VALUE: \"INVALID_VALUE\",\r\n  UNIQUENESS_VIOLATION: \"UNIQUENESS_VIOLATION\",\r\n  UNKNOWN: \"UNKNOWN\",\r\n  FAILED: \"FAILED\",\r\n};\r\n\r\nexport class Flow {\r\n  constructor({ id, status, _links, _embedded, resumeUrl }) {\r\n    this.id = id;\r\n    this.links = _links;\r\n    this.embedded = _embedded;\r\n    this.status = _.get(STATUS, status, STATUS.UNKNOWN);\r\n    this.resumeUrl = resumeUrl;\r\n  }\r\n\r\n  isPasswordExpired() {\r\n    return _.isEqual(this.status, STATUS.PASSWORD_EXPIRED);\r\n  }\r\n\r\n  isCompleted() {\r\n    return _.isEqual(this.status, STATUS.COMPLETED);\r\n  }\r\n\r\n  isFailed() {\r\n    return _.isEqual(this.status, STATUS.FAILED);\r\n  }\r\n\r\n  isRecoveryCodeRequired() {\r\n    return _.isEqual(this.status, STATUS.RECOVERY_CODE_REQUIRED);\r\n  }\r\n\r\n  getLinks() {\r\n    return this.links;\r\n  }\r\n\r\n  getPasswordPolicy() {\r\n    return this.embedded.passwordPolicy;\r\n  }\r\n\r\n  getUser() {\r\n    return this.embedded.user;\r\n  }\r\n\r\n  getPasswordPolicyMessage(policy) {\r\n    const { passwordPolicy } = this.embedded;\r\n\r\n    if (!passwordPolicy) {\r\n      return {};\r\n    }\r\n\r\n    let requirement;\r\n    if (policy.name === RequiredProperties.MIN_SPECIAL) {\r\n      requirement = _.get(\r\n        _.get(passwordPolicy, \"minCharacters\"),\r\n        RequiredProperties.MIN_SPECIAL\r\n      );\r\n      return _.get(generatePasswordPolicyMessage(requirement), \"minSpecial\");\r\n    } else if (policy.name === RequiredProperties.MIN_LOWERCASE) {\r\n      requirement = _.get(\r\n        _.get(passwordPolicy, \"minCharacters\"),\r\n        RequiredProperties.MIN_LOWERCASE\r\n      );\r\n      return _.get(generatePasswordPolicyMessage(requirement), \"minLower\");\r\n    } else if (policy.name === RequiredProperties.MIN_UPPERCASE) {\r\n      requirement = _.get(\r\n        _.get(passwordPolicy, \"minCharacters\"),\r\n        RequiredProperties.MIN_UPPERCASE\r\n      );\r\n      return _.get(generatePasswordPolicyMessage(requirement), \"minUpper\");\r\n    } else if (policy.name === RequiredProperties.MIN_NUMERIC) {\r\n      requirement = _.get(\r\n        _.get(passwordPolicy, \"minCharacters\"),\r\n        RequiredProperties.MIN_NUMERIC\r\n      );\r\n      return _.get(generatePasswordPolicyMessage(requirement), \"minNumeric\");\r\n    }\r\n\r\n    return _.get(\r\n      generatePasswordPolicyMessage(_.get(passwordPolicy, policy.name)),\r\n      policy.name\r\n    );\r\n  }\r\n}\r\n\r\nexport const generatePasswordPolicyMessage = (value) => {\r\n  if (value) {\r\n    return {\r\n      maxRepeatedCharacters: `No more than ${value} repeated character${\r\n        value > 1 ? \"s\" : \"\"\r\n      }`,\r\n      minUniqueCharacters: `${value} unique character${value > 1 ? \"s\" : \"\"}`,\r\n      length: `${value.min} character${value.min > 1 ? \"s\" : \"\"}`,\r\n      minNumeric: `${value} number`,\r\n      minLower: `${value} lowercase character${value > 1 ? \"s\" : \"\"}`,\r\n      minUpper: `${value} UPPERCASE character${value > 1 ? \"s\" : \"\"}`,\r\n      minSpecial: `${value} special character${value > 1 ? \"s\" : \"\"}`,\r\n      minComplexity: \"Must be a strong password\",\r\n    };\r\n  } else {\r\n    return {};\r\n  }\r\n};\r\n","/**\r\n * PingOne authentication flow and OpenID Connect/OAuth 2 protocol API.\r\n *\r\n * Contains functions that correspond to steps needed to make it through a PingOne authentication flow.\r\n * Each function corresponds with an action the UI needs to take and call function(s) from actions.js\r\n */\r\nimport request from \"superagent\";\r\nimport config from \"../config\";\r\n\r\n/******************************************************************************\r\n *         PingOne Authentication Flow Actions API\r\n ******************************************************************************/\r\n\r\nconst getFlow =  (environmentId, flowId) => {\r\n  let flowUrl = `${getBaseApiUrl(true)}/${environmentId}/flows/${flowId}`;\r\n  return get( flowUrl, true, {'Content-Type': 'application/json'}, true)\r\n}\r\n/**\r\n *  Login user\r\n * @param apiPath PingOne for Customers authorization and authentication endpoint\r\n * @param username user name\r\n * @param password user password\r\n */\r\nconst signOn = (apiPath, username, password) => {\r\n  return pingPost(apiPath, 'usernamePassword.check+json', {username, password});\r\n};\r\n\r\n/**\r\n * Recover a user’s forgotten password.\r\n * @param apiPath PingOne for Customers authorization and authentication endpoint\r\n * @param username user name\r\n */\r\nconst forgotPassword = (apiPath, username) => {\r\n  return pingPost(apiPath, 'password.forgot+json', {username});\r\n};\r\n\r\n/**\r\n * Send the OTP to the user. The OTP is a randomly generated eight-character alphanumeric string sent to the user’s email address, and the code is valid for five minutes.\r\n * @param apiPath PingOne for Customers authorization and authentication endpoint\r\n */\r\nconst sendRecoveryCode = (apiPath) => {\r\n  return pingPost(apiPath, 'password.sendRecoveryCode+json');\r\n};\r\n\r\n/**\r\n * Recover the account and set a new password.\r\n * @param apiPath PingOne for Customers authorization and authentication endpoint\r\n * @param recoveryCode\r\n * @param newPassword\r\n */\r\nconst recoverUserPassword = (apiPath, recoveryCode,\r\n    newPassword) => {\r\n  return pingPost(apiPath, 'password.recover+json',\r\n      {recoveryCode, newPassword});\r\n};\r\n\r\n/**\r\n * Change (or reset) the user’s password.\r\n * @param apiPath PingOne for Customers authorization and authentication endpoint\r\n * @param username user name\r\n * @param currentPassword\r\n * @param newPassword\r\n */\r\nconst changeUserPassword = (apiPath, username, currentPassword,\r\n    newPassword) => {\r\n  return pingPost(apiPath, 'password.reset+json',\r\n      {currentPassword, newPassword});\r\n};\r\n\r\n/**\r\n * Update (or reset) a flow orchestration session.\r\n * @param apiPath PingOne for Customers authorization and authentication endpoint\r\n */\r\nconst resetFlow = (apiPath) => {\r\n  return pingPost(apiPath, 'session.reset+json', {})\r\n};\r\n\r\n/**\r\n * Send the user a new account verification email.\r\n * @param apiPath PingOne for Customers authorization and authentication endpoint\r\n */\r\nconst sendVerificationCode = (apiPath) => {\r\n  return pingPost(apiPath, 'user.sendVerificationCode+json');\r\n};\r\n\r\n/**\r\n * Verify the user account to continue the authentication flow.\r\n * The user must click the link in the verification email to verify the account. The request body requires the verificationCode attribute identifying the verification code to check.\r\n * @param apiPath PingOne for Customers authorization and authentication endpoint\r\n * @param verificationCode\r\n */\r\nconst verifyUser = (apiPath, verificationCode) => {\r\n  return pingPost(apiPath, 'user.verify+json', {verificationCode});\r\n};\r\n\r\n/**\r\n * Register a new user.\r\n * @param apiPath PingOne for Customers authorization and authentication endpoint\r\n * @param username user name\r\n * @param email\r\n * @param password\r\n */\r\nconst registerUser = (apiPath, username, email, password) => {\r\n  return pingPost(apiPath, 'user.register+json', {username, email, password});\r\n};\r\n\r\nconst pingPost = (apiPath, contentType, body = {}) =>\r\n    post(apiPath, `application/vnd.pingidentity.${contentType}`, body);\r\n\r\nconst post = (apiPath, contentType, body = {}) =>\r\n    new Promise((resolved, rejected) =>\r\n        request\r\n        .post(apiPath)\r\n        .withCredentials()\r\n        .send(body)\r\n        .set('Content-Type', contentType)\r\n        .end((err, res) => {\r\n          if (err) {\r\n            rejected(res ? res.body : err);\r\n          } else {\r\n            resolved(res.body);\r\n          }\r\n        }));\r\n\r\nconst get = (apiPath, getBody = false, headers = {},\r\n    withCredentials = false) => {\r\n  return new Promise((resolved, rejected) => {\r\n        let req = request\r\n        .get(apiPath)\r\n        .set(headers);\r\n\r\n        if (withCredentials) {\r\n          req = req.withCredentials();\r\n        }\r\n        req.end((err, res) => {\r\n          if (err) {\r\n            rejected(res ? res.body : err);\r\n          } else {\r\n            resolved(getBody ? res.body : res);\r\n          }\r\n        })\r\n      }\r\n  );\r\n}\r\n\r\n\r\nconst getBaseApiUrl = (useAuthUrl) => {\r\n  return useAuthUrl ?\r\n      config.AUTH : // base API URL for auth things like the flow orchestration service\r\n      config.API; // base API URL for non-auth things\r\n};\r\n\r\nexport default {\r\n  getFlow,\r\n  resetFlow,\r\n\r\n  signOn,\r\n  changeUserPassword,\r\n  forgotPassword,\r\n  sendRecoveryCode,\r\n  recoverUserPassword,\r\n\r\n  registerUser,\r\n  sendVerificationCode,\r\n  verifyUser\r\n}\r\n","import { Flow } from \"../sdk/index\";\r\nimport api from \"./api\";\r\nimport _ from \"lodash\";\r\n\r\nconst types = {\r\n  UPDATE_FLOW: \"UPDATE_FLOW\",\r\n  UNRECOVERABLE_ERROR: \"UNRECOVERABLE_ERROR\",\r\n};\r\n\r\n// Actions Creator\r\n\r\nconst updateFlowAction = (result, isAuthenticated = false, message = null) => ({\r\n  type: types.UPDATE_FLOW,\r\n  payload: {\r\n    result,\r\n    isAuthenticated,\r\n    message,\r\n  },\r\n});\r\n\r\nconst updateFlow = (dispatch) => (\r\n  result = null,\r\n  isAuthenticated = false,\r\n  message = null\r\n) => {\r\n  return dispatch(\r\n    updateFlowAction(\r\n      result ? new Flow(result) : result,\r\n      isAuthenticated,\r\n      message\r\n    )\r\n  );\r\n};\r\n\r\nconst getFlow = (dispatch) => (environmentId, flowId) => {\r\n  return api.getFlow(environmentId, flowId).then((flow) => {\r\n    dispatch(updateFlowAction(new Flow(flow)));\r\n    return Promise.resolve(flow);\r\n  });\r\n};\r\n\r\nconst resetFlow = (dispatch) => (apiPath) => {\r\n  return api.resetFlow(apiPath).then((flow) => {\r\n    dispatch(updateFlowAction(new Flow(flow)));\r\n    return Promise.resolve(flow);\r\n  });\r\n};\r\n\r\nconst signOn = (dispatch) => (apiPath, username, password) => {\r\n  return api.signOn(apiPath, username, password).then((flow) => {\r\n    dispatch(updateFlowAction(new Flow(flow), true));\r\n    return Promise.resolve(flow);\r\n  });\r\n};\r\n\r\nconst forgotPassword = (dispatch) => (apiPath, username) => {\r\n  return api.forgotPassword(apiPath, username).then((flow) => {\r\n    dispatch(updateFlowAction(new Flow(flow)));\r\n    return Promise.resolve(flow);\r\n  });\r\n};\r\n\r\nconst sendRecoveryCode = (dispatch) => (apiPath) => {\r\n  return api.sendRecoveryCode(apiPath).then((flow) => {\r\n    dispatch(updateFlowAction(new Flow(flow)));\r\n    return Promise.resolve(flow);\r\n  });\r\n};\r\n\r\nconst recoverUserPassword = (dispatch) => (\r\n  apiPath,\r\n  recoveryCode,\r\n  newPassword\r\n) => {\r\n  return api\r\n    .recoverUserPassword(apiPath, recoveryCode, newPassword)\r\n    .then((flow) => {\r\n      dispatch(\r\n        updateFlowAction(\r\n          new Flow(flow),\r\n          false,\r\n          \"You successfully recovered your password, \" +\r\n            _.get(flow, \"_embedded.user.username\", \"\")\r\n        )\r\n      );\r\n      return Promise.resolve(flow);\r\n    });\r\n};\r\n\r\nconst changeUserPassword = (dispatch) => (\r\n  apiPath,\r\n  username,\r\n  currentPassword,\r\n  newPassword\r\n) => {\r\n  console.log(\"newP\");\r\n  console.log(newPassword);\r\n  return api\r\n    .changeUserPassword(apiPath, username, currentPassword, newPassword)\r\n    .then((flow) => {\r\n      dispatch(updateFlowAction(new Flow(flow)));\r\n      return Promise.resolve(flow);\r\n    });\r\n};\r\n\r\nconst sendVerificationCode = (dispatch) => (apiPath) => {\r\n  return api.sendVerificationCode(apiPath).then((flow) => {\r\n    dispatch(updateFlowAction(new Flow(flow)));\r\n    return Promise.resolve(flow);\r\n  });\r\n};\r\n\r\nconst verifyUser = (dispatch) => (apiPath, verificationCode) => {\r\n  return api.verifyUser(apiPath, verificationCode).then((flow) => {\r\n    dispatch(\r\n      updateFlowAction(\r\n        new Flow(flow),\r\n        false,\r\n        \"Congratulations, \" +\r\n          _.get(flow, \"_embedded.user.username\") +\r\n          \"! You’ve created a Ping Sample Application account\"\r\n      )\r\n    );\r\n    return Promise.resolve(flow);\r\n  });\r\n};\r\n\r\nconst registerUser = (dispatch) => (apiPath, username, email, password) => {\r\n  return api.registerUser(apiPath, username, email, password).then((flow) => {\r\n    dispatch(updateFlowAction(new Flow(flow)));\r\n    return Promise.resolve(flow);\r\n  });\r\n};\r\n\r\nexport default {\r\n  types,\r\n\r\n  bind: (dispatch) => ({\r\n    signOn: signOn(dispatch),\r\n    changeUserPassword: changeUserPassword(dispatch),\r\n    forgotPassword: forgotPassword(dispatch),\r\n    sendRecoveryCode: sendRecoveryCode(dispatch),\r\n    recoverUserPassword: recoverUserPassword(dispatch),\r\n    sendVerificationCode: sendVerificationCode(dispatch),\r\n    verifyUser: verifyUser(dispatch),\r\n    registerUser: registerUser(dispatch),\r\n\r\n    getFlow: getFlow(dispatch),\r\n    updateFlow: updateFlow(dispatch),\r\n    resetFlow: resetFlow(dispatch),\r\n  }),\r\n};\r\n","export const ItemTypes = {\r\n  BOX: \"box\",\r\n};\r\n","import React from \"react\";\r\n\r\nconst styles = {\r\n  padding: \"0 0\",\r\n  cursor: \"move\",\r\n  height: \"100%\",\r\n  width: \"auto\",\r\n};\r\nexport const Box = ({ img, yellow }) => {\r\n  const backgroundColor = yellow ? \"yellow\" : \"white\";\r\n  return <img src={img} style={{ ...styles, backgroundColor }}/>;\r\n};\r\n","import React from \"react\";\r\nimport { DragSource } from \"react-dnd\";\r\nimport { getEmptyImage } from \"react-dnd-html5-backend\";\r\nimport { ItemTypes } from \"./ItemTypes\";\r\nimport { Box } from \"./Box\";\r\nfunction getStyles(props) {\r\n  const { left, top, isDragging } = props;\r\n  const transform = `translate3d(${left}px, ${top}px, 0)`;\r\n  return {\r\n    position: \"absolute\",\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    maxWidth: \"100%\",\r\n    maxHeight: \"100%\",\r\n    transform,\r\n    WebkitTransform: transform,\r\n    // IE fallback: hide the real node using CSS when dragging\r\n    // because IE will ignore our custom \"empty image\" drag preview.\r\n    opacity: isDragging ? 0 : 1,\r\n    height: isDragging ? 0 : \"\",\r\n  };\r\n}\r\nclass DraggableBox extends React.PureComponent {\r\n  componentDidMount() {\r\n    const { connectDragPreview } = this.props;\r\n    if (connectDragPreview) {\r\n      // Use empty image as a drag preview so browsers don't draw it\r\n      // and we can draw whatever we want on the custom drag layer instead.\r\n      connectDragPreview(getEmptyImage(), {\r\n        // IE fallback: specify that we'd rather screenshot the node\r\n        // when it already knows it's being dragged so we can hide it with CSS.\r\n        captureDraggingState: true,\r\n      });\r\n    }\r\n  }\r\n  render() {\r\n    const { img, connectDragSource } = this.props;\r\n    return connectDragSource(\r\n      <div style={getStyles(this.props)}>\r\n        <Box img={img} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default DragSource(\r\n  ItemTypes.BOX,\r\n  {\r\n    beginDrag(props) {\r\n      const { id, title, left, top } = props;\r\n      return { id, title, left, top };\r\n    },\r\n  },\r\n  (connect, monitor) => ({\r\n    connectDragSource: connect.dragSource(),\r\n    connectDragPreview: connect.dragPreview(),\r\n    isDragging: monitor.isDragging(),\r\n  })\r\n)(DraggableBox);\r\n","export function snapToGrid(x, y) {\r\n  // lower multiple = finer grain grid to snap to\r\n  const multiple = 8;\r\n  const snappedX = Math.round(x / multiple) * multiple;\r\n  const snappedY = Math.round(y / multiple) * multiple;\r\n  return [snappedX, snappedY];\r\n}\r\n","import React from \"react\";\r\nimport { DropTarget } from \"react-dnd\";\r\nimport { ItemTypes } from \"./ItemTypes\";\r\nimport DraggableBox from \"./DraggableBox\";\r\nimport { snapToGrid } from \"./snapToGrid\";\r\nimport update from \"immutability-helper\";\r\n\r\nconst styles = {\r\n  width: \"100%\",\r\n  height: \"100%\",\r\n  position: \"relative\",\r\n};\r\nclass Container extends React.PureComponent {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.state = {\r\n      boxes: {\r\n        a: { top: 0, left: 0, src: this.props.img },\r\n      },\r\n    };\r\n  }\r\n  render() {\r\n    const { connectDropTarget } = this.props;\r\n    const { boxes } = this.state;\r\n    return connectDropTarget(\r\n      <div style={styles}>\r\n        {Object.keys(boxes).map((key) => this.renderBox(boxes[key], key))}\r\n      </div>\r\n    );\r\n  }\r\n  moveBox(id, left, top) {\r\n    this.setState(\r\n      update(this.state, {\r\n        boxes: {\r\n          [id]: {\r\n            $merge: { left, top },\r\n          },\r\n        },\r\n      })\r\n    );\r\n  }\r\n  renderBox(item, key) {\r\n    return <DraggableBox img={this.props.img} key={key} id={key} {...item} />;\r\n  }\r\n}\r\nexport default DropTarget(\r\n  ItemTypes.BOX,\r\n  {\r\n    drop(props, monitor, component) {\r\n      if (!component) {\r\n        return;\r\n      }\r\n      const delta = monitor.getDifferenceFromInitialOffset();\r\n      const item = monitor.getItem();\r\n      let left = Math.round(item.left + delta.x);\r\n      let top = Math.round(item.top + delta.y);\r\n      if (props.snapToGrid) {\r\n        [left, top] = snapToGrid(left, top);\r\n      }\r\n      component.moveBox(item.id, left, top);\r\n    },\r\n  },\r\n  (connect) => ({\r\n    connectDropTarget: connect.dropTarget(),\r\n  })\r\n)(Container);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Box } from \"./Box\";\r\nconst styles = {\r\n  display: \"inline-block\",\r\n  transform: \"rotate(-7deg)\",\r\n  WebkitTransform: \"rotate(-7deg)\",\r\n};\r\nexport const BoxDragPreview = ({ img }) => {\r\n  const [tickTock, setTickTock] = useState(false);\r\n  useEffect(() => {\r\n    function subscribeToIntervalTick() {\r\n      const interval = setInterval(() => {\r\n        setTickTock(!tickTock);\r\n      }, 500);\r\n      return () => clearInterval(interval);\r\n    }},\r\n    [tickTock]\r\n  );\r\n  return (\r\n    <div style={styles}>\r\n      <Box yellow={tickTock} img={img} />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { DragLayer } from \"react-dnd\";\r\nimport { ItemTypes } from \"./ItemTypes\";\r\nimport { BoxDragPreview } from \"./BoxDragPreview\";\r\nimport { snapToGrid } from \"./snapToGrid\";\r\nconst layerStyles = {\r\n  position: \"fixed\",\r\n  pointerEvents: \"none\",\r\n  zIndex: 100,\r\n  left: 0,\r\n  top: 0,\r\n  width: \"100%\",\r\n  height: \"100%\",\r\n};\r\nfunction getItemStyles(props) {\r\n  const { initialOffset, currentOffset } = props;\r\n  if (!initialOffset || !currentOffset) {\r\n    return {\r\n      display: \"none\",\r\n    };\r\n  }\r\n  let { x, y } = currentOffset;\r\n  if (props.snapToGrid) {\r\n    x -= initialOffset.x;\r\n    y -= initialOffset.y;\r\n    [x, y] = snapToGrid(x, y);\r\n    x += initialOffset.x;\r\n    y += initialOffset.y;\r\n  }\r\n  const transform = `translate(${x}px, ${y}px)`;\r\n  return {\r\n    transform,\r\n    WebkitTransform: transform,\r\n  };\r\n}\r\nconst CustomDragLayer = (props) => {\r\n  const { item, img, itemType, isDragging } = props;\r\n  function renderItem() {\r\n    switch (itemType) {\r\n      case ItemTypes.BOX:\r\n        return <BoxDragPreview img={img} />;\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n  if (!isDragging) {\r\n    return null;\r\n  }\r\n  return (\r\n    <div style={layerStyles}>\r\n      <div style={getItemStyles(props)}>{renderItem()}</div>\r\n    </div>\r\n  );\r\n};\r\nexport default DragLayer((monitor) => ({\r\n  item: monitor.getItem(),\r\n  itemType: monitor.getItemType(),\r\n  initialOffset: monitor.getInitialSourceClientOffset(),\r\n  currentOffset: monitor.getSourceClientOffset(),\r\n  isDragging: monitor.isDragging(),\r\n}))(CustomDragLayer);\r\n","import React, { useState, useCallback } from \"react\";\r\nimport Container from \"./Container\";\r\nimport CustomDragLayer from \"./CustomDragLayer\";\r\nexport const Example = ({img}) => {\r\n  const [snapToGridAfterDrop, setSnapToGridAfterDrop] = useState(true);\r\n  const [snapToGridWhileDragging, setSnapToGridWhileDragging] = useState(true);\r\n\r\n\r\n  return (\r\n    <div style={{height: \"100%\", maxHeight: \"100%\"}}>\r\n      <Container snapToGrid={snapToGridAfterDrop} img={img} />\r\n      <CustomDragLayer snapToGrid={snapToGridWhileDragging} img={img} />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useCallback, useState, useEffect } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { DropzoneArea } from \"material-ui-dropzone\";\r\nimport { ColorExtractor } from \"react-color-extractor\";\r\nimport { Example } from \"./Example\";\r\nimport { DndProvider } from \"react-dnd\";\r\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\r\n\r\nimport Resizer from \"react-image-file-resizer\";\r\n\r\nexport default function DragNDrop({ ...props }) {\r\n  const [file, setFile] = useState(0);\r\n  const [colors, setColors] = useState(0);\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      height: \"100%\",\r\n    },\r\n    dropzoneArea: {\r\n      backgroundColor:\r\n        theme.palette.type === \"light\"\r\n          ? theme.palette.grey[50]\r\n          : theme.palette.grey[900],\r\n      backgroundSize: \"cover\",\r\n      backgroundPosition: \"center\",\r\n      height: file ? \"0\" : \"100%\",\r\n      maxHeight: file ? \"0\" : \"100%\",\r\n      width: file ? \"0\" : \"100%\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n    },\r\n    dropzoneAreaText: {\r\n      color: \"#000000\",\r\n      fontSize: \"2rem\",\r\n    },\r\n    image: {\r\n      backgroundImage: file,\r\n      backgroundRepeat: \"no-repeat\",\r\n      backgroundColor:\r\n        theme.palette.type === \"light\"\r\n          ? theme.palette.grey[50]\r\n          : theme.palette.grey[900],\r\n      backgroundSize: \"cover\",\r\n      backgroundPosition: \"center\",\r\n    },\r\n    paper: {\r\n      margin: theme.spacing(8, 4),\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: \"100%\", // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  const onDrop = useCallback((acceptedFiles) => {\r\n    // Do something with the files\r\n    let newFile = acceptedFiles[acceptedFiles.length - 1];\r\n    let uploadedFileUrl = URL.createObjectURL(newFile);\r\n    if (uploadedFileUrl) {\r\n      setFile(uploadedFileUrl);\r\n    }\r\n  }, []);\r\n\r\n  const imgOrText = () => {\r\n    if (!file) {\r\n      return (\r\n        <Grid item xs={12}>\r\n          <DropzoneArea\r\n            dropzoneClass={classes.dropzoneArea}\r\n            dropzoneParagraphClass={\"color: #000000, fontSize: 2rem\"}\r\n            showPreviews={false}\r\n            showPreviewsInDropzone={false}\r\n            acceptedFiles={[\"image/*\"]}\r\n            filesLimit={1}\r\n            maxFileSize={50000000} // ~5GB\r\n            onDrop={onDrop}\r\n            dropzoneText=\"Upload a Logo Image Here. Drag Image to Rearrange.\"\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container className={classes.root} maxWidth={false} disableGutters>\r\n      <Grid\r\n        container\r\n        display=\"flex\"\r\n        wrap=\"wrap\"\r\n        spacing={0}\r\n        justify=\"flex-start\"\r\n        alignItems=\"stretch\"\r\n        style={{ height: \"100%\", maxHeight: \"100%\" }}\r\n      >\r\n        <Grid item xs={12} style={{overflow: \"hidden\"}}>\r\n            <DropzoneArea\r\n              dropzoneClass={classes.dropzoneArea}\r\n              dropzoneParagraphClass={\"color: #000000, fontSize: 2rem\"}\r\n              showPreviews={false}\r\n              showPreviewsInDropzone={false}\r\n              acceptedFiles={[\"image/*\"]}\r\n              filesLimit={1}\r\n              maxFileSize={50000000} // ~5GB\r\n              onDrop={onDrop}\r\n              dropzoneText=\"Upload a Logo Image Here. Drag Image to Rearrange.\"\r\n            />\r\n          <DndProvider backend={HTML5Backend}>\r\n            <Example img={file} />\r\n          </DndProvider>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nexport default function EmailInput(props) {\r\n  return (\r\n    <TextField\r\n      variant=\"outlined\"\r\n      margin=\"normal\"\r\n      required\r\n      fullWidth\r\n      id=\"username\"\r\n      label=\"Username\"\r\n      name=\"username\"\r\n      autoComplete=\"email\"\r\n      autoFocus\r\n      onChange={props.handleUsernameUpdate}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nexport default function EmailInput(props) {\r\n  return (\r\n    <TextField\r\n      variant=\"outlined\"\r\n      margin=\"normal\"\r\n      required\r\n      fullWidth\r\n      name=\"password\"\r\n      label=\"Password\"\r\n      type=\"password\"\r\n      id=\"password\"\r\n      autoComplete=\"current-password\"\r\n      onChange={props.handlePasswordUpdate}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport DragNDrop from \"./DragNDrop/DragNDrop\";\r\nimport EmailInput from \"./InputForm/EmailInput\";\r\nimport PasswordInput from \"./InputForm/PasswordInput\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n  },\r\n  image: {\r\n    backgroundImage: \"url(https://source.unsplash.com/random)\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundColor:\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[50]\r\n        : theme.palette.grey[900],\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignInPage({\r\n  handleUsernameUpdate,\r\n  handlePasswordUpdate,\r\n  handleSubmit,\r\n  handleForgotPassword,\r\n  handlePasswordReset,\r\n  handleRegister,\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={6} lg={8} xl={9}>\r\n        <DragNDrop />\r\n      </Grid>\r\n\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        sm={8}\r\n        md={6}\r\n        lg={4}\r\n        xl={3}\r\n        component={Paper}\r\n        elevation={6}\r\n        square\r\n      >\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <form className={classes.form} noValidate>\r\n            <EmailInput handleUsernameUpdate={handleUsernameUpdate} />\r\n            <PasswordInput handlePasswordUpdate={handlePasswordUpdate} />\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            />\r\n            <Button\r\n              type=\"button\"\r\n              data-id=\"user-credentials-submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={handleSubmit}\r\n            >\r\n              Sign In\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link href=\"#\" variant=\"body2\" onClick={handleForgotPassword}>\r\n                  Forgot password?\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link href=\"#\" variant=\"body2\" onClick={handleRegister}>\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n            <Box mt={5}>\r\n              <Copyright />\r\n            </Box>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Flow, STATUS } from \"../sdk\";\r\nimport { PATH } from \"./auth\";\r\nimport _ from \"lodash\";\r\nimport SignInPage from \"./SignInPage\";\r\nimport { Container } from \"@material-ui/core\";\r\n\r\nclass UserLogin extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      isSubmitting: false,\r\n      redirect: null,\r\n    };\r\n\r\n    this.handleUsernameUpdate = this.handleUsernameUpdate.bind(this);\r\n    this.handlePasswordUpdate = this.handlePasswordUpdate.bind(this);\r\n    this.handleForgotPassword = this.handleForgotPassword.bind(this);\r\n    this.handleRegister = this.handleRegister.bind(this);\r\n    this.handleResetFlow = this.handleResetFlow.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleUsernameUpdate(event) {\r\n    this.setState({ username: event.target.value });\r\n  }\r\n\r\n  handlePasswordUpdate(event) {\r\n    this.setState({ password: event.target.value });\r\n  }\r\n\r\n  handleSubmit() {\r\n    const { flow, authActions } = this.props;\r\n\r\n    this.setState({\r\n      isSubmitting: true,\r\n      spinnerMessage: \"Signing you on...\",\r\n      errorMessage: \"\",\r\n    });\r\n\r\n    console.log(\"flow\");\r\n    console.log(flow);\r\n\r\n    if (flow.isCompleted()) {\r\n      // Redirect to the resume endpoint in case of password recovery or new user registration process completion\r\n      window.location.assign(flow.resumeUrl);\r\n      return;\r\n    }\r\n\r\n    const validatePasswordUrl = _.get(\r\n      flow.getLinks(),\r\n      [\"usernamePassword.check\", \"href\"],\r\n      null\r\n    );\r\n    if (!validatePasswordUrl) {\r\n      this.setState({\r\n        errorMessage:\r\n          \"An unexpected error has occurred. There is no user validation link in the flow.\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    return authActions\r\n      .signOn(validatePasswordUrl, this.state.username, this.state.password)\r\n      .then((newflow) => {\r\n        console.log(\"newflow then\");\r\n        this.setState({\r\n          isSubmitting: false,\r\n        });\r\n        console.log(\"newflow before promise\");\r\n        return Promise.resolve(newflow);\r\n      })\r\n      .catch((err) => {\r\n        const errorDetail = _.get(err, \"details[0].code\", null);\r\n        if (_.isEqual(errorDetail, STATUS.INVALID_CREDENTIALS)) {\r\n          this.setState({\r\n            errorMessage: \"Incorrect username or password. Please try again.\",\r\n            isSubmitting: false,\r\n          });\r\n        } else if (_.isEqual(errorDetail, STATUS.PASSWORD_LOCKED_OUT)) {\r\n          const secondsUntilUnlock = _.get(\r\n            err,\r\n            \"details[0].innerError.secondsUntilUnlock\",\r\n            null\r\n          );\r\n          const timeUntilUnlockMsg =\r\n            secondsUntilUnlock > 60\r\n              ? `${Math.floor(secondsUntilUnlock / 60)} minutes`\r\n              : `${secondsUntilUnlock} seconds`;\r\n          const errorMessage = `Too many unsuccessful sign-on attempts. Your account will unlock in ${timeUntilUnlockMsg}.`;\r\n          this.setState({\r\n            redirect: (\r\n              <Redirect\r\n                to={{\r\n                  pathname: PATH.UNABLE_TO_SIGN_IN,\r\n                  state: { errorMessage },\r\n                }}\r\n              />\r\n            ),\r\n            isSubmitting: false,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            errorMessage: \"An unexpected error has occurred.\",\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  handleResetFlow() {\r\n    const { flow, authActions } = this.props;\r\n\r\n    const resetFlowUrl = _.get(\r\n      flow.getLinks(),\r\n      [\"session.reset\", \"href\"],\r\n      null\r\n    );\r\n    if (!resetFlowUrl) {\r\n      this.setState({\r\n        errorMessage:\r\n          \"An unexpected error has occurred. There is no session reset link in the flow.\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    return authActions.resetFlow(resetFlowUrl).catch((err) => {\r\n      this.setState({\r\n        errorMessage: `An unexpected error has occurred. ${err}`,\r\n      });\r\n    });\r\n  }\r\n\r\n  handleForgotPassword() {\r\n    this.setState({\r\n      redirect: (\r\n        <Redirect from={PATH.SIGN_ON} to={PATH.FORGOT_PASSWORD_USERNAME} />\r\n      ),\r\n    });\r\n  }\r\n\r\n  handleRegister() {\r\n    this.setState({\r\n      redirect: <Redirect from={PATH.SIGN_ON} to={PATH.REGISTER} />,\r\n    });\r\n  }\r\n\r\n  handlePasswordReset() {\r\n    this.setState({\r\n      redirect: <Redirect from={PATH.SIGN_ON} to={PATH.CHANGE_PASSWORD} />,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { username, password, redirect, errorMessage } = this.state;\r\n    const { flow, message } = this.props;\r\n\r\n    const alert =\r\n      (errorMessage || message) &&\r\n      (errorMessage || (message && message.isError) ? (\r\n        <div className=\"alert alert-danger\">\r\n          {errorMessage ? errorMessage : message.content}\r\n        </div>\r\n      ) : (\r\n        <div className=\"alert alert-success\">{message.content}</div>\r\n      ));\r\n\r\n    if (flow) {\r\n      // Rendering a Redirect will cause switch to the corresponding Route's content\r\n      if (flow.isPasswordExpired()) {\r\n        return (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/expired\",\r\n              state: { username, currentPassword: password },\r\n            }}\r\n          />\r\n        );\r\n      }\r\n\r\n      const forgotPasswordUrl = _.get(\r\n        flow.getLinks(),\r\n        [\"password.forgot\", \"href\"],\r\n        null\r\n      );\r\n      const forgotPasswordAnchor = forgotPasswordUrl && (\r\n        <div className=\"input-field\">\r\n          <a\r\n            href=\"#\"\r\n            data-id=\"recovery-button\"\r\n            onClick={this.handleForgotPassword}\r\n          >\r\n            Forgot Password\r\n          </a>\r\n        </div>\r\n      );\r\n\r\n      const userRegistrationLink = _.get(\r\n        flow.getLinks(),\r\n        [\"user.register\"],\r\n        null\r\n      );\r\n      const registerUserAnchor = userRegistrationLink && (\r\n        <div className=\"input-field\">\r\n          No account?{\" \"}\r\n          <a data-id=\"register-button\" href=\"#\" onClick={this.handleRegister}>\r\n            Register now!\r\n          </a>\r\n        </div>\r\n      );\r\n\r\n      const passwordResetLink = _.get(\r\n        flow.getLinks(),\r\n        [\"password.reset\"],\r\n        null\r\n      );\r\n      const passwordResetAnchor = passwordResetLink && (\r\n        <div className=\"input-field\">\r\n          <a\r\n            data-id=\"reset-password-button\"\r\n            href=\"#\"\r\n            onClick={this.handlePasswordReset}\r\n          >\r\n            Reset password\r\n          </a>\r\n        </div>\r\n      );\r\n\r\n      const resetFlowLink = _.get(flow.getLinks(), [\"session.reset\"], null);\r\n      const resetFlowAnchor = resetFlowLink && (\r\n        <div className=\"input-field\">\r\n          <a\r\n            data-id=\"session-reset-button\"\r\n            href=\"#\"\r\n            onClick={this.handleResetFlow}\r\n          >\r\n            Switch Accounts\r\n          </a>\r\n        </div>\r\n      );\r\n\r\n      return (\r\n        <Container display=\"flex\" maxWidth={false} disableGutters>\r\n          {redirect}\r\n          {alert}\r\n\r\n          <SignInPage\r\n            handleUsernameUpdate={this.handleUsernameUpdate}\r\n            handlePasswordUpdate={this.handlePasswordUpdate}\r\n            handleForgotPassword={this.handleForgotPassword}\r\n            handleSubmit={this.handleSubmit}\r\n            handlePasswordReset={this.handlePasswordReset}\r\n            handleRegister={this.handleRegister}\r\n          />\r\n        </Container>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"container\">\r\n          {redirect}\r\n          <div>Waiting for the flow ...</div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nUserLogin.propTypes = {\r\n  authActions: PropTypes.shape({\r\n    signOn: PropTypes.func.isRequired,\r\n    forgotPassword: PropTypes.func.isRequired,\r\n    resetFlow: PropTypes.func.isRequired,\r\n  }).isRequired,\r\n  flow: PropTypes.instanceOf(Flow).isRequired,\r\n};\r\n\r\nexport default UserLogin;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass UsernameValidator extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      username: props.username,\r\n    };\r\n\r\n    this.handleUsernameUpdate = this.handleUsernameUpdate.bind(this);\r\n    this.doSubmit = this.doSubmit.bind(this);\r\n    this.doCancel = this.doCancel.bind(this);\r\n  }\r\n\r\n  handleUsernameUpdate(event) {\r\n    this.setState({username: event.target.value});\r\n  }\r\n\r\n  doSubmit(event) {\r\n    event.preventDefault();\r\n    const {username} = this.state;\r\n    this.props.handleSubmit(username);\r\n  }\r\n\r\n  doCancel(event) {\r\n    event.preventDefault();\r\n    this.props.handleCancel();\r\n  }\r\n\r\n  render() {\r\n    const {username} = this.state;\r\n    const {children} = this.props;\r\n\r\n    return (\r\n        <div>\r\n          {children}\r\n          <form className=\"form\" onSubmit={this.doSubmit}>\r\n            <div className=\"input-field\">\r\n              <label>Username</label>\r\n              <input\r\n                  type=\"text\"\r\n                  className=\"text-input input-field\"\r\n                  id=\"username\"\r\n                  name=\"username\"\r\n                  placeholder=\"Username\"\r\n                  value={username}\r\n                  onChange={this.handleUsernameUpdate}\r\n                  autoFocus\r\n              />\r\n            </div>\r\n            <div className=\"input-field\">\r\n              <button\r\n                  className=\"button\"\r\n                  data-id=\"submit-btn\"\r\n                  disabled={!username}\r\n                  type=\"submit\"\r\n              >\r\n                Submit\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"input-field\">\r\n              <button\r\n                  className=\"button\"\r\n                  data-id=\"cancel-btn\"\r\n                  onClick={this.doCancel}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nUsernameValidator.propTypes = {\r\n  username: PropTypes.string,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  handleCancel: PropTypes.func.isRequired,\r\n  children: PropTypes.node,\r\n};\r\n\r\nUsernameValidator.defaultProps = {\r\n  username: '',\r\n  children: null,\r\n};\r\n\r\nexport default UsernameValidator;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router';\r\nimport UsernameValidator from './usernameValidator';\r\nimport {PATH} from './auth';\r\nimport _ from \"lodash\";\r\nimport {Flow} from \"../sdk\";\r\n\r\nclass ForgotPassword extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isSubmitting: false,\r\n      redirect: null\r\n    };\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleCancel = this.handleCancel.bind(this);\r\n  }\r\n\r\n  handleSubmit(username) {\r\n    const {\r\n      flow,\r\n      authActions\r\n    } = this.props;\r\n\r\n    this.setState({\r\n      isSubmitting: true,\r\n      spinnerMessage: 'Processing password recovery request...'\r\n    });\r\n\r\n    const forgotPasswordUrl = _.get(flow.getLinks(), ['password.forgot', 'href'], null);\r\n    if (!forgotPasswordUrl) {\r\n      this.setState({\r\n        errorMessage: 'There is no forgot password link in the flow. Your password policy may have disabled password recovery. Please check your application configuration in PingOne for Customers Admin Console. ',\r\n      });\r\n      return;\r\n    }\r\n\r\n    return authActions.forgotPassword(forgotPasswordUrl, username)\r\n    .catch(error => {\r\n      if (_.isEqual(_.get(error, 'code', null), 'NOT_FOUND')) {\r\n        this.setState({\r\n          isSubmitting: false,\r\n          errorMessage: 'Such user name could not be found. Please try again.'\r\n        });\r\n      } else {\r\n        this.setState({\r\n          errorMessage: 'An unexpected error has occurred while processing password recovery request.',\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  handleCancel() {\r\n    this.setState({\r\n      redirect: (\r\n          <Redirect from={PATH.FORGOT_PASSWORD_USERNAME} to={PATH.SIGN_ON}/>),\r\n      isSubmitting: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      isSubmitting,\r\n      spinnerMessage,\r\n      errorMessage,\r\n      redirect,\r\n      username,\r\n    } = this.state;\r\n    const {message} = this.props;\r\n\r\n    const alert = (errorMessage || message) && (\r\n        (errorMessage || (message && message.isError)) ? (\r\n                <div className=\"alert alert-danger\">{errorMessage ? errorMessage\r\n                    : message.content}</div>) :\r\n            <div className=\"alert alert-info\">{message.content}</div>\r\n    );\r\n\r\n    const validator = (\r\n        <UsernameValidator\r\n            username={username}\r\n            handleSubmit={this.handleSubmit}\r\n            handleCancel={this.handleCancel}\r\n        >\r\n          {alert}\r\n        </UsernameValidator>\r\n    );\r\n\r\n    return isSubmitting ?\r\n        <div className=\"alert alert-info\">\r\n          {spinnerMessage}\r\n          <span className=\"loader\"></span>\r\n        </div> : (\r\n            <div>\r\n              {redirect}\r\n              {validator}\r\n            </div>\r\n        );\r\n  }\r\n}\r\n\r\nForgotPassword.propTypes = {\r\n  flow: PropTypes.instanceOf(Flow).isRequired,\r\n  authActions: PropTypes.shape({\r\n    forgotPassword: PropTypes.func.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default ForgotPassword;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Message = ({ messageType, message }) => {\r\n  return (\r\n    <div>\r\n      <div className={(messageType === \"error\" ? 'alert-danger' : 'alert-success' ) + ' alert'}>{message}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nMessage.propTypes = {\r\n  messageType: PropTypes.string.isRequired,\r\n  message: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Message;\r\n","import _ from \"lodash\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Redirect } from \"react-router\";\r\nimport { PATH } from \"./auth\";\r\nimport { Flow, STATUS } from \"../sdk/index\";\r\nimport {\r\n  passwordRequirementsValidator,\r\n  getServerValidatedRequirementMessage,\r\n  generateRequirementsTooltip,\r\n} from \"../sdk/helpers\";\r\n\r\nclass PasswordEditor extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      currentPassword: \"\",\r\n      newPassword: \"\",\r\n      newPasswordVerify: \"\",\r\n      errorMessage: \"\",\r\n      isValidatingCredentials: false,\r\n      saveAttempted: false,\r\n      newPasswordFocused: false,\r\n      redirect: null,\r\n    };\r\n\r\n    this.handleCurrentPasswordUpdate = this.handleCurrentPasswordUpdate.bind(\r\n      this\r\n    );\r\n    this.handleNewPasswordUpdate = this.handleNewPasswordUpdate.bind(this);\r\n    this.handleNewPasswordVerifyUpdate = this.handleNewPasswordVerifyUpdate.bind(\r\n      this\r\n    );\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.showTooltipReqs = this.showTooltipReqs.bind(this);\r\n    this.hideTooltipReqs = this.hideTooltipReqs.bind(this);\r\n  }\r\n\r\n  handleCurrentPasswordUpdate(event) {\r\n    this.setState({ currentPassword: event.target.value });\r\n  }\r\n\r\n  handleNewPasswordUpdate(event) {\r\n    this.setState({\r\n      newPassword: event.target.value,\r\n    });\r\n  }\r\n\r\n  handleNewPasswordVerifyUpdate(event) {\r\n    this.setState({ newPasswordVerify: event.target.value });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    const { currentPassword, newPasswordVerify, newPassword } = this.state;\r\n    const { flow, authActions } = this.props;\r\n\r\n    const changePasswordUrl = _.get(\r\n      flow.getLinks(),\r\n      [\"password.reset\", \"href\"],\r\n      null\r\n    );\r\n    if (!changePasswordUrl) {\r\n      this.setState({\r\n        errorMessage:\r\n          \"An unexpected error has occurred. There is no password reset link in the flow.\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      saveAttempted: true,\r\n    });\r\n\r\n    if (newPasswordVerify !== newPassword) {\r\n      // Should never hit this but it doesn't hurt anything to keep it here\r\n      const errorMessage = \"New passwords don’t match. Please try again.\";\r\n      this.setState({ errorMessage });\r\n      return Promise.reject(new Error(errorMessage));\r\n    }\r\n\r\n    //  Initiate an action to change (or reset) the user’s password.\r\n    return new Promise((resolved) =>\r\n      this.setState({ isValidatingCredentials: true }, () => resolved())\r\n    )\r\n      .then(() => {\r\n        authActions.changeUserPassword(\r\n          changePasswordUrl,\r\n          \"user\",\r\n          currentPassword,\r\n          newPassword\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        const errorDetail = _.get(err, \"details[0].code\", null);\r\n\r\n        if (_.isEqual(errorDetail, STATUS.INVALID_VALUE)) {\r\n          const errorTarget = _.get(err, \"details[0].target\", null);\r\n\r\n          if (_.isEqual(errorTarget, \"currentPassword\")) {\r\n            this.setState({\r\n              currentPassword: \"\",\r\n              newPassword: \"\",\r\n              newPasswordVerify: \"\",\r\n              errorMessage: \"Incorrect current password. Please try again.\",\r\n            });\r\n          } else if (_.isEqual(errorTarget, \"newPassword\")) {\r\n            const unsatisfiedServerRequirements = _.get(\r\n              err,\r\n              \"details[0].innerError.unsatisfiedRequirements\",\r\n              []\r\n            );\r\n\r\n            // if there are multiple server validation fails, show just one\r\n            const failedReq = unsatisfiedServerRequirements[0];\r\n\r\n            this.setState({\r\n              currentPassword: \"\",\r\n              newPassword: \"\",\r\n              newPasswordVerify: \"\",\r\n              errorMessage: getServerValidatedRequirementMessage(\r\n                failedReq,\r\n                flow.getPasswordPolicy()\r\n              ),\r\n            });\r\n          } else {\r\n            // Edge case where the error detail is INVALID_VALUE, but it's not a value we expect. Should never happen unless an API change happens without updating the UI.\r\n            this.setState({\r\n              errorMessage: \"An unexpected error has occurred.\",\r\n            });\r\n          }\r\n        } else if (_.isEqual(errorDetail, STATUS.PASSWORD_LOCKED_OUT)) {\r\n          this.setState({\r\n            redirect: (\r\n              <Redirect\r\n                from={PATH.CHANGE_PASSWORD}\r\n                to={{\r\n                  pathname: PATH.UNABLE_TO_SIGN_IN,\r\n                  state: {\r\n                    errorMessage:\r\n                      \"Too many unsuccessful sign-on attempts. Account is now locked.\",\r\n                  },\r\n                }}\r\n              />\r\n            ),\r\n          });\r\n        } else {\r\n          // Edge case where the error detail not one of the expected values. Should never happen unless an API change happens without updating the UI.\r\n          this.setState({\r\n            errorMessage: \"An unexpected error has occurred.\",\r\n          });\r\n        }\r\n\r\n        return Promise.resolve(err);\r\n      })\r\n      .then(() => this.setState({ isValidatingCredentials: false }));\r\n  }\r\n\r\n  showTooltipReqs() {\r\n    this.setState({\r\n      newPasswordFocused: true,\r\n    });\r\n  }\r\n\r\n  hideTooltipReqs() {\r\n    this.setState({\r\n      newPasswordFocused: false,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      currentPassword,\r\n      newPassword,\r\n      newPasswordVerify,\r\n      errorMessage,\r\n      isValidatingCredentials,\r\n      redirect,\r\n      saveAttempted,\r\n      newPasswordFocused,\r\n    } = this.state;\r\n\r\n    const { flow, feedbackMessage, message } = this.props;\r\n\r\n    const clientValidatedRequirements = passwordRequirementsValidator(\r\n      flow.getPasswordPolicy(),\r\n      newPassword\r\n    );\r\n\r\n    const requirementsMet =\r\n      !!newPassword &&\r\n      _.reduce(\r\n        clientValidatedRequirements,\r\n        (result, req) => result && req.isValid,\r\n        true\r\n      );\r\n    const requirementsTooltip = generateRequirementsTooltip(\r\n      clientValidatedRequirements,\r\n      flow\r\n    );\r\n\r\n    const alert =\r\n      (errorMessage || message) &&\r\n      (errorMessage || (message && message.isError) ? (\r\n        <div className=\"alert alert-danger\">\r\n          {errorMessage ? errorMessage : message.content}\r\n        </div>\r\n      ) : (\r\n        <div className=\"alert alert-success\">{message.content}</div>\r\n      ));\r\n\r\n    const doPasswordsDiffer =\r\n      newPassword &&\r\n      newPasswordVerify &&\r\n      !_.isEqual(newPassword, newPasswordVerify);\r\n\r\n    return isValidatingCredentials ? (\r\n      <div className=\"alert alert-info\">\r\n        Processing changing password request...\r\n        <span className=\"loader\"></span>\r\n      </div>\r\n    ) : (\r\n      <div>\r\n        {redirect}\r\n        <h1 className=\"heading\">Change Password</h1>\r\n        <div className=\"alert alert-info\">{feedbackMessage}</div>\r\n        {alert}\r\n        <form className=\"form\" onSubmit={this.handleSubmit}>\r\n          <div className=\"input-field\">\r\n            <label>Current Password</label>\r\n            <input\r\n              type=\"password\"\r\n              className=\"text-input\"\r\n              id=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"Current Password\"\r\n              value={currentPassword}\r\n              onChange={this.handleCurrentPasswordUpdate}\r\n            />\r\n          </div>\r\n          <div\r\n            className={\r\n              !!newPassword && !requirementsMet && !newPasswordFocused\r\n                ? \" input-field input-invalid\"\r\n                : \" input-field input-valid\"\r\n            }\r\n          >\r\n            <label>New Password</label>\r\n            <input\r\n              type=\"password\"\r\n              className=\"text-input\"\r\n              id=\"new\"\r\n              name=\"new\"\r\n              placeholder=\"New Password\"\r\n              value={newPassword}\r\n              onChange={this.handleNewPasswordUpdate}\r\n              onFocus={this.showTooltipReqs}\r\n              onBlur={this.hideTooltipReqs}\r\n              autoFocus={saveAttempted}\r\n            />\r\n            {clientValidatedRequirements.length > 0 &&\r\n              newPasswordFocused &&\r\n              !requirementsMet && (\r\n                <div className=\"tooltip show\">\r\n                  <h4 className=\"heading\">Minimum Password Requirements:</h4>\r\n                  <div className=\"requirements\">{requirementsTooltip}</div>\r\n                </div>\r\n              )}\r\n          </div>\r\n          <div\r\n            className={\r\n              !!newPassword && !doPasswordsDiffer\r\n                ? \" input-field input-valid\"\r\n                : \" input-field input-invalid\"\r\n            }\r\n          >\r\n            <label>Verify New Password</label>\r\n            <input\r\n              type=\"password\"\r\n              className=\"text-input\"\r\n              id=\"verify\"\r\n              name=\"verify\"\r\n              placeholder=\"Verify New Password\"\r\n              value={newPasswordVerify}\r\n              onChange={this.handleNewPasswordVerifyUpdate}\r\n            />\r\n            {doPasswordsDiffer && (\r\n              <div className=\"tooltip show\">\r\n                <i className=\"fa fa-warning\" style={{ color: \"red\" }}></i>\r\n                <span className=\"requirement__name\">\r\n                  Passwords don’t match. Please try again.\r\n                </span>\r\n              </div>\r\n            )}\r\n          </div>\r\n          {console.log(!currentPassword)}\r\n          {console.log(!newPassword)}\r\n          {console.log(!newPasswordVerify)}\r\n          {console.log(doPasswordsDiffer)}\r\n          {console.log(!requirementsMet)}\r\n          {console.log()}\r\n          {console.log(newPassword)}\r\n          {console.log(newPasswordVerify)}\r\n          {console.log()}\r\n          <button\r\n            className=\"button\"\r\n            disabled={\r\n              !currentPassword ||\r\n              !newPassword ||\r\n              !newPasswordVerify ||\r\n              doPasswordsDiffer ||\r\n              !requirementsMet\r\n            }\r\n            type=\"submit\"\r\n          >\r\n            Save\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPasswordEditor.propTypes = {\r\n  flow: PropTypes.instanceOf(Flow).isRequired,\r\n  authActions: PropTypes.shape({\r\n    changeUserPassword: PropTypes.func.isRequired,\r\n  }).isRequired,\r\n  feedbackMessage: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default PasswordEditor;\r\n","import _ from \"lodash\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Flow } from \"../sdk/index\";\r\nimport {\r\n  passwordRequirementsValidator,\r\n  getServerValidatedRequirementMessage,\r\n  generateRequirementsTooltip,\r\n} from \"../sdk/helpers\";\r\nimport { Redirect } from \"react-router\";\r\nimport { PATH } from \"./auth\";\r\n\r\nclass RecoveryCodeAndPasswordForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      recoveryCode: \"\",\r\n      newPassword: \"\",\r\n      newPasswordVerify: \"\",\r\n      feedbackMessage:\r\n        \"If you have an active account with a valid email address, you will receive \" +\r\n        \"an email with a recovery code which you may enter here, along with a new password. If you do \" +\r\n        \"not have an account or email, please contact your administrator to recover your password.\",\r\n      errorMessage: \"\",\r\n      isSubmitting: false,\r\n      isResending: false,\r\n      newPasswordFocused: false,\r\n      redirect: null,\r\n    };\r\n\r\n    this.handleRecoveryCodeUpdate = this.handleRecoveryCodeUpdate.bind(this);\r\n    this.handleNewPasswordUpdate = this.handleNewPasswordUpdate.bind(this);\r\n    this.handleNewPasswordVerifyUpdate = this.handleNewPasswordVerifyUpdate.bind(\r\n      this\r\n    );\r\n    this.handleResend = this.handleResend.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleCancel = this.handleCancel.bind(this);\r\n    this.showTooltipReqs = this.showTooltipReqs.bind(this);\r\n    this.hideTooltipReqs = this.hideTooltipReqs.bind(this);\r\n  }\r\n\r\n  handleRecoveryCodeUpdate(event) {\r\n    this.setState({ recoveryCode: event.target.value });\r\n  }\r\n\r\n  handleNewPasswordUpdate(event) {\r\n    this.setState({\r\n      newPassword: event.target.value,\r\n    });\r\n  }\r\n\r\n  handleNewPasswordVerifyUpdate(event) {\r\n    this.setState({ newPasswordVerify: event.target.value });\r\n  }\r\n\r\n  handleResend() {\r\n    const { flow, authActions } = this.props;\r\n\r\n    const sendRecoveryCodeUrl = _.get(\r\n      flow.getLinks(),\r\n      [\"password.sendRecoveryCode\", \"href\"],\r\n      null\r\n    );\r\n    if (!sendRecoveryCodeUrl) {\r\n      this.setState({\r\n        errorMessage:\r\n          \"An unexpected error has occurred. There is no send recovery code link in the flow.\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.setState({ isResending: true });\r\n    return authActions\r\n      .sendRecoveryCode(sendRecoveryCodeUrl)\r\n      .then((newLoginFlow) => {\r\n        const updatedFlow = new Flow(newLoginFlow);\r\n        if (updatedFlow.isRecoveryCodeRequired()) {\r\n          this.setState({\r\n            feedbackMessage:\r\n              \"Recovery code resent. If an email address is associated with your account, \" +\r\n              \"you will receive an email with a recovery code which you may enter here, along with a new password. \" +\r\n              \"If you do not have an account or email, please contact your administrator to recover your password.\",\r\n            recoveryCode: \"\",\r\n            newPassword: \"\",\r\n            newPasswordVerify: \"\",\r\n            errorMessage: \"\",\r\n            isResending: false,\r\n          });\r\n          return Promise.resolve();\r\n        }\r\n        return Promise.reject(new Error(\"Could not understand flow\"));\r\n      })\r\n      .catch((err) => {\r\n        this.setState({\r\n          feedbackMessage:\r\n            \"Enter recovery code once received, along with a new password.\",\r\n          errorMessage: \"Unable to resend recovery code. Please try again.\",\r\n          isResending: false,\r\n        });\r\n      });\r\n  }\r\n\r\n  handleCancel(event) {\r\n    event.preventDefault();\r\n\r\n    const { authActions } = this.props;\r\n\r\n    this.setState({\r\n      redirect: (\r\n        <Redirect from={PATH.RECOVERY_CODE_AND_PASSWORD} to={PATH.SIGN_ON} />\r\n      ),\r\n      isSubmitting: false,\r\n      isResending: false,\r\n    });\r\n\r\n    // Reset flow to start the process again\r\n    authActions.updateFlow(null);\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    const { recoveryCode, newPasswordVerify, newPassword } = this.state;\r\n    const { flow, authActions } = this.props;\r\n\r\n    const recoverPasswordUrl = _.get(\r\n      flow.getLinks(),\r\n      [\"password.recover\", \"href\"],\r\n      null\r\n    );\r\n    if (!recoverPasswordUrl) {\r\n      this.setState({\r\n        errorMessage:\r\n          \"An unexpected error has occurred. There is no password recovery link in the flow.\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (newPasswordVerify !== newPassword) {\r\n      this.setState({\r\n        errorMessage: \"New passwords don’t match. Please try again.\",\r\n      });\r\n      return Promise.reject();\r\n    }\r\n\r\n    if (recoverPasswordUrl === null) {\r\n      this.setState({\r\n        errorMessage:\r\n          \"An unexpected error has occurred. There is no password recovery link in the flow.\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    return new Promise((resolved) =>\r\n      this.setState({ isSubmitting: true }, () => resolved())\r\n    )\r\n      .then(() =>\r\n        authActions.recoverUserPassword(\r\n          recoverPasswordUrl,\r\n          recoveryCode,\r\n          newPassword\r\n        )\r\n      )\r\n      .then((newFlow) => {\r\n        this.setState({\r\n          isSubmitting: false,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        const errorDetail = _.get(err, \"details[0].code\", null);\r\n\r\n        if (_.isEqual(errorDetail, \"INVALID_VALUE\")) {\r\n          const errorTarget = _.get(err, \"details[0].target\", null);\r\n\r\n          if (_.isEqual(errorTarget, \"recoveryCode\")) {\r\n            this.setState({\r\n              recoveryCode: \"\",\r\n              newPassword: \"\",\r\n              newPasswordVerify: \"\",\r\n              errorMessage: \"Incorrect recovery code. Please try again.\",\r\n              isSubmitting: false,\r\n            });\r\n          } else if (_.isEqual(errorTarget, \"newPassword\")) {\r\n            const unsatisfiedServerRequirements = _.get(\r\n              err,\r\n              \"details[0].innerError.unsatisfiedRequirements\",\r\n              []\r\n            );\r\n\r\n            // if there are multiple server validation fails, show just one\r\n            const failedReq = unsatisfiedServerRequirements[0];\r\n\r\n            this.setState({\r\n              newPassword: \"\",\r\n              newPasswordVerify: \"\",\r\n              errorMessage: getServerValidatedRequirementMessage(\r\n                failedReq,\r\n                flow.getPasswordPolicy()\r\n              ),\r\n              feedbackMessage:\r\n                \"Please try again to set a new password with existed recovery code\",\r\n              isSubmitting: false,\r\n            });\r\n          } else {\r\n            // Edge case where the error detail is INVALID_VALUE, but it's not a value we expect. Should never happen unless an API change happens without updating the UI.\r\n            this.setState({\r\n              errorMessage: \"An unexpected error has occurred.\",\r\n              isSubmitting: false,\r\n            });\r\n          }\r\n        } else {\r\n          // Edge case where the error detail not INVALID_VALUE. Should never happen unless an API change happens without updating the UI.\r\n          this.setState({\r\n            errorMessage: \"An unexpected error has occurred.\",\r\n            isSubmitting: false,\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  showTooltipReqs() {\r\n    this.setState({\r\n      newPasswordFocused: true,\r\n    });\r\n  }\r\n\r\n  hideTooltipReqs() {\r\n    this.setState({\r\n      newPasswordFocused: false,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      recoveryCode,\r\n      newPassword,\r\n      newPasswordVerify,\r\n      feedbackMessage,\r\n      errorMessage,\r\n      redirect,\r\n      newPasswordFocused,\r\n      isResending,\r\n      isSubmitting,\r\n    } = this.state;\r\n\r\n    const { flow, message } = this.props;\r\n\r\n    const clientValidatedRequirements = passwordRequirementsValidator(\r\n      flow.getPasswordPolicy(),\r\n      newPassword\r\n    );\r\n    const requirementsMet =\r\n      !!newPassword &&\r\n      _.reduce(\r\n        clientValidatedRequirements,\r\n        (result, req) => result && req.isValid,\r\n        true\r\n      );\r\n    const requirementsTooltip = generateRequirementsTooltip(\r\n      clientValidatedRequirements,\r\n      flow\r\n    );\r\n\r\n    const alert =\r\n      (errorMessage || message) &&\r\n      (errorMessage || (message && message.isError) ? (\r\n        <div className=\"alert alert-danger\">\r\n          {errorMessage ? errorMessage : message.content}\r\n        </div>\r\n      ) : (\r\n        <div className=\"alert alert-success\">{message.content}</div>\r\n      ));\r\n    const doPasswordsDiffer =\r\n      newPassword &&\r\n      newPasswordVerify &&\r\n      !_.isEqual(newPassword, newPasswordVerify);\r\n\r\n    const spinnerMessage = () => {\r\n      if (isSubmitting) {\r\n        return \"Processing recovery request...\";\r\n      } else if (isResending) {\r\n        return \"Processing resending recovery request...\";\r\n      }\r\n    };\r\n\r\n    return isSubmitting || isResending ? (\r\n      <div className=\"alert alert-info\">\r\n        {spinnerMessage}\r\n        <span className=\"loader\"></span>\r\n      </div>\r\n    ) : (\r\n      <div>\r\n        {redirect}\r\n        <h1 className=\"heading\" data-id=\"recovery-heading\">\r\n          Enter New Password\r\n        </h1>\r\n        <div className=\"alert alert-info\">{feedbackMessage}</div>\r\n        {alert}\r\n        <form className=\"form\">\r\n          <div className=\"input-field\">\r\n            <label>Recovery Code</label>\r\n            <input\r\n              type=\"password\"\r\n              className=\"text-input\"\r\n              id=\"recovery-code\"\r\n              name=\"recovery-code\"\r\n              placeholder=\"Recovery Code\"\r\n              value={recoveryCode}\r\n              onChange={this.handleRecoveryCodeUpdate}\r\n            />\r\n          </div>\r\n          <div\r\n            className={\r\n              (!!newPassword && !requirementsMet && !newPasswordFocused\r\n                ? \"input-invalid\"\r\n                : \"input-valid\") + \" input-field\"\r\n            }\r\n          >\r\n            <label>New Password</label>\r\n            <input\r\n              type=\"password\"\r\n              className=\"text-input\"\r\n              id=\"new\"\r\n              name=\"new\"\r\n              placeholder=\"New Password\"\r\n              value={newPassword}\r\n              onChange={this.handleNewPasswordUpdate}\r\n              onFocus={this.showTooltipReqs}\r\n              onBlur={this.hideTooltipReqs}\r\n            />\r\n            {clientValidatedRequirements.length > 0 &&\r\n              newPasswordFocused &&\r\n              !requirementsMet && (\r\n                <div className=\"tooltip show\">\r\n                  <h4 className=\"heading\">Minimum Password Requirements:</h4>\r\n                  <div className=\"requirements\">{requirementsTooltip}</div>\r\n                </div>\r\n              )}\r\n          </div>\r\n          <div\r\n            className={\r\n              (!!newPasswordVerify && !doPasswordsDiffer\r\n                ? \"input-valid\"\r\n                : \"input-invalid\") + \" input-field\"\r\n            }\r\n          >\r\n            <label>Verify New Password</label>\r\n            <input\r\n              type=\"password\"\r\n              className=\"text-input\"\r\n              id=\"verify\"\r\n              name=\"verify\"\r\n              placeholder=\"Verify New Password\"\r\n              value={newPasswordVerify}\r\n              onChange={this.handleNewPasswordVerifyUpdate}\r\n            />\r\n            {doPasswordsDiffer && (\r\n              <div className=\"tooltip show\">\r\n                <i className=\"fa fa-warning\" style={{ color: \"red\" }}></i>\r\n                <span className=\"requirement__name\">\r\n                  Passwords don’t match. Please try again.\r\n                </span>\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className=\"input-field\">\r\n            {console.log(recoveryCode)}\r\n            {console.log(newPassword)}\r\n            {console.log(newPasswordVerify)}\r\n            {console.log(doPasswordsDiffer)}\r\n            {console.log(requirementsMet)}\r\n            <button\r\n              id=\"save\"\r\n              className=\"button\"\r\n              onClick={this.handleSubmit}\r\n              disabled={\r\n                !recoveryCode ||\r\n                !newPassword ||\r\n                !newPasswordVerify ||\r\n                doPasswordsDiffer ||\r\n                !requirementsMet\r\n              }\r\n              type=\"submit\"\r\n            >\r\n              Save\r\n            </button>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button\r\n              className=\"button\"\r\n              data-id=\"cancel-btn\"\r\n              onClick={this.handleCancel}\r\n            >\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </form>\r\n        <div className=\"input-field\">\r\n          Didn’t receive an email?{\" \"}\r\n          <a data-id=\"resend-email\" href=\"#\" onClick={this.handleResend}>\r\n            Resend\r\n          </a>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRecoveryCodeAndPasswordForm.propTypes = {\r\n  flow: PropTypes.instanceOf(Flow).isRequired,\r\n  authActions: PropTypes.shape({\r\n    sendRecoveryCode: PropTypes.func.isRequired,\r\n    recoverUserPassword: PropTypes.func.isRequired,\r\n    updateFlow: PropTypes.func.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default RecoveryCodeAndPasswordForm;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Redirect } from \"react-router\";\r\nimport { PATH } from \"./auth\";\r\nimport {\r\n  getServerValidatedRequirementMessage,\r\n  generateRequirementsTooltip,\r\n  passwordRequirementsValidator as validator,\r\n} from \"../sdk/helpers\";\r\nimport { Flow, STATUS } from \"../sdk\";\r\n\r\nclass RegistrationForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      passwordVerify: \"\",\r\n      redirect: null,\r\n      errorMessage: \"\",\r\n      isRegistering: false,\r\n      passwordFocused: false,\r\n    };\r\n\r\n    this.handleUsernameUpdate = this.handleUsernameUpdate.bind(this);\r\n    this.handleEmailUpdate = this.handleEmailUpdate.bind(this);\r\n    this.handlePasswordUpdate = this.handlePasswordUpdate.bind(this);\r\n    this.handlePasswordVerifyUpdate = this.handlePasswordVerifyUpdate.bind(\r\n      this\r\n    );\r\n    this.handleSignInClick = this.handleSignInClick.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.showTooltipReqs = this.showTooltipReqs.bind(this);\r\n    this.hideTooltipReqs = this.hideTooltipReqs.bind(this);\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    const { flow, authActions } = this.props;\r\n    const { username, email, password } = this.state;\r\n\r\n    const registrationLink = _.get(\r\n      flow.getLinks(),\r\n      [\"user.register\", \"href\"],\r\n      null\r\n    );\r\n    if (!registrationLink) {\r\n      this.setState({\r\n        errorMessage:\r\n          \"An unexpected error has occurred. There is no user registration link in the flow.\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      isRegistering: true,\r\n    });\r\n\r\n    return authActions\r\n      .registerUser(registrationLink, username, email, password)\r\n      .then((newFlow) => {\r\n        this.setState({\r\n          isRegistering: false,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        this.setState({\r\n          isRegistering: false,\r\n        });\r\n        const errorDetail = _.get(err, \"details[0].code\", null);\r\n\r\n        if (_.isEqual(errorDetail, STATUS.INVALID_VALUE)) {\r\n          const errorTarget = _.get(err, \"details[0].target\", null);\r\n\r\n          if (_.isEqual(errorTarget, \"username\")) {\r\n            this.setState({\r\n              errorMessage: \"Invalid character in username.\",\r\n            });\r\n          } else if (_.isEqual(errorTarget, \"email\")) {\r\n            this.setState({\r\n              errorMessage: \"Invalid email address.\",\r\n            });\r\n          } else if (_.isEqual(errorTarget, \"password\")) {\r\n            const unsatisfiedServerRequirements = _.get(\r\n              err,\r\n              \"details[0].innerError.unsatisfiedRequirements\",\r\n              []\r\n            );\r\n\r\n            // if there are multiple server validation fails, show just one\r\n            const failedReq = unsatisfiedServerRequirements[0];\r\n\r\n            this.setState({\r\n              errorMessage: getServerValidatedRequirementMessage(\r\n                failedReq,\r\n                flow.getPasswordPolicy()\r\n              ),\r\n              password: \"\",\r\n              passwordVerify: \"\",\r\n            });\r\n          } else {\r\n            this.setState({\r\n              errorMessage: \"An unexpected error has occurred.\",\r\n            });\r\n          }\r\n        } else if (_.isEqual(errorDetail, STATUS.UNIQUENESS_VIOLATION)) {\r\n          this.setState({\r\n            errorMessage: \"Username already taken.\",\r\n          });\r\n        } else {\r\n          this.setState({\r\n            errorMessage: \"An unexpected error has occurred.\",\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  handleUsernameUpdate(event) {\r\n    this.setState({\r\n      username: event.target.value,\r\n    });\r\n  }\r\n\r\n  handleEmailUpdate(event) {\r\n    this.setState({\r\n      email: event.target.value,\r\n    });\r\n  }\r\n\r\n  handlePasswordUpdate(event) {\r\n    this.setState({\r\n      password: event.target.value,\r\n    });\r\n  }\r\n\r\n  handlePasswordVerifyUpdate(event) {\r\n    this.setState({\r\n      passwordVerify: event.target.value,\r\n    });\r\n  }\r\n\r\n  handleSignInClick() {\r\n    this.setState({\r\n      redirect: <Redirect from={PATH.REGISTER} to={PATH.SIGN_ON} />,\r\n    });\r\n  }\r\n\r\n  showTooltipReqs() {\r\n    this.setState({\r\n      passwordFocused: true,\r\n    });\r\n  }\r\n\r\n  hideTooltipReqs() {\r\n    this.setState({\r\n      passwordFocused: false,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      username,\r\n      email,\r\n      password,\r\n      passwordVerify,\r\n      redirect,\r\n      errorMessage,\r\n      isRegistering,\r\n      passwordFocused,\r\n    } = this.state;\r\n\r\n    const { flow, message } = this.props;\r\n\r\n    const clientValidatedRequirements = validator(\r\n      flow.getPasswordPolicy(),\r\n      password\r\n    );\r\n    const requirementsTooltip = generateRequirementsTooltip(\r\n      clientValidatedRequirements,\r\n      flow\r\n    );\r\n    const requirementsMet =\r\n      !!password &&\r\n      _.reduce(\r\n        clientValidatedRequirements,\r\n        (result, req) => result && req.isValid,\r\n        true\r\n      );\r\n\r\n    const doPasswordsDiffer = password !== passwordVerify;\r\n    const isReady = !!(\r\n      username &&\r\n      email &&\r\n      password &&\r\n      passwordVerify &&\r\n      !doPasswordsDiffer &&\r\n      requirementsMet\r\n    );\r\n\r\n    const alert =\r\n      (errorMessage || message) &&\r\n      (errorMessage || (message && message.isError) ? (\r\n        <div className=\"alert alert-danger\">\r\n          {errorMessage ? errorMessage : message.content}\r\n        </div>\r\n      ) : (\r\n        <div className=\"alert alert-info\">{message.content}</div>\r\n      ));\r\n\r\n    return isRegistering ? (\r\n      <div className=\"alert\"> Registering...</div>\r\n    ) : (\r\n      <div>\r\n        {redirect}\r\n        <h1 data-id=\"register-heading\" className=\"heading\">\r\n          Create Your Profile\r\n        </h1>\r\n        <div className=\"input-field\">Enter the required information below.</div>\r\n        {alert}\r\n        <div>\r\n          <form className=\"form\" onSubmit={this.onSubmit}>\r\n            <div className=\"input-field\">\r\n              <label>Username</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"text-input\"\r\n                id=\"username\"\r\n                name=\"username\"\r\n                placeholder=\"Username\"\r\n                value={username}\r\n                onChange={this.handleUsernameUpdate}\r\n                maxLength={128}\r\n                autoFocus\r\n              />\r\n            </div>\r\n            <div className=\"input-field\">\r\n              <label>Email Address</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"text-input\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"Email Address\"\r\n                value={email}\r\n                onChange={this.handleEmailUpdate}\r\n              />\r\n            </div>\r\n            <div\r\n              className={\r\n                (password && requirementsMet && !passwordFocused\r\n                  ? \"input-valid\"\r\n                  : \"input-invalid\") + \" input-field\"\r\n              }\r\n            >\r\n              <label>Password</label>\r\n              <input\r\n                type=\"password\"\r\n                className=\"text-input\"\r\n                id=\"password\"\r\n                name=\"password\"\r\n                placeholder=\"Password\"\r\n                value={password}\r\n                onChange={this.handlePasswordUpdate}\r\n                onFocus={this.showTooltipReqs}\r\n                onBlur={this.hideTooltipReqs}\r\n              />\r\n              {clientValidatedRequirements.length > 0 &&\r\n                passwordFocused &&\r\n                !requirementsMet && (\r\n                  <div className=\"tooltip show\">\r\n                    <h4 className=\"heading\">Minimum Password Requirements:</h4>\r\n                    <div className=\"requirements\">{requirementsTooltip}</div>\r\n                  </div>\r\n                )}\r\n            </div>\r\n            <div\r\n              className={\r\n                (passwordVerify && !doPasswordsDiffer\r\n                  ? \"input-valid\"\r\n                  : \"input-invalid\") + \" input-field\"\r\n              }\r\n            >\r\n              <label>Verify Password</label>\r\n              <input\r\n                type=\"password\"\r\n                className=\"text-input\"\r\n                id=\"verify\"\r\n                name=\"verify\"\r\n                placeholder=\"Verify Password\"\r\n                value={passwordVerify}\r\n                onChange={this.handlePasswordVerifyUpdate}\r\n              />\r\n              {doPasswordsDiffer && (\r\n                <div className=\"tooltip show\">\r\n                  <i className=\"fa fa-warning\" style={{ color: \"red\" }}></i>\r\n                  <span className=\"requirement__name\">\r\n                    Passwords don’t match. Please try again.\r\n                  </span>\r\n                </div>\r\n              )}\r\n            </div>\r\n            <button\r\n              data-id=\"register-button\"\r\n              className=\"button\"\r\n              onClick={this.handleSubmit}\r\n              type=\"submit\"\r\n              disabled={!isReady}\r\n            >\r\n              Save\r\n            </button>\r\n          </form>\r\n        </div>\r\n        <div className=\"input-field\">\r\n          Already have an account?{\" \"}\r\n          <a data-id=\"signInBtn\" href=\"#\" onClick={this.handleSignInClick}>\r\n            Sign in\r\n          </a>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRegistrationForm.propTypes = {\r\n  flow: PropTypes.instanceOf(Flow).isRequired,\r\n  authActions: PropTypes.shape({\r\n    updateFlow: PropTypes.func.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default RegistrationForm;\r\n","import _ from 'lodash';\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Flow, STATUS} from \"../sdk\";\r\n\r\nclass VerificationCode extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      verificationCode: '',\r\n      isVerifying: false,\r\n      errorMessage: '',\r\n      isResending: false\r\n    };\r\n\r\n    this.handleResendEmail = this.handleResendEmail.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleVerificationCodeUpdate = this.handleVerificationCodeUpdate.bind(this);\r\n  }\r\n\r\n  handleVerificationCodeUpdate(event) {\r\n    this.setState({\r\n      verificationCode: event.target.value,\r\n    });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {\r\n      flow,\r\n      authActions,\r\n    } = this.props;\r\n    const { verificationCode } = this.state;\r\n    this.setState({\r\n      isVerifying: true,\r\n    });\r\n\r\n    const verifyLink = _.get(flow.getLinks()['user.verify'], 'href', null);\r\n    if (!verifyLink) {\r\n      this.setState({\r\n        errorMessage: 'An unexpected error has occurred. There is no user verification link in the flow.',\r\n      });\r\n      return;\r\n    }\r\n\r\n    return authActions.verifyUser(verifyLink, verificationCode)\r\n      .then(newFlow => {\r\n        this.setState({\r\n          isVerifying: false,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        this.setState({ isVerifying: false });\r\n\r\n        const errorDetail = _.get(err, 'details[0].code', null);\r\n        if (_.isEqual(errorDetail, STATUS.INVALID_VALUE)) {\r\n          const errorTarget = _.get(err, 'details[0].target', null);\r\n          if (errorTarget === 'verificationCode') {\r\n            this.setState({\r\n              errorMessage: 'Incorrect verification code. Please try again.',\r\n              verificationCode: '',\r\n            });\r\n\r\n            return Promise.resolve(err);\r\n          }\r\n        }\r\n\r\n        this.setState({\r\n          errorMessage: 'An unexpected error occurred. Please try again.',\r\n          verificationCode: '',\r\n        });\r\n      });\r\n  }\r\n\r\n  handleResendEmail() {\r\n    const { flow, authActions } = this.props;\r\n\r\n    const sendVerificationCodeHref = _.get(flow.getLinks()['user.sendVerificationCode'], 'href', null);\r\n    if (!sendVerificationCodeHref) {\r\n      this.setState({\r\n        errorMessage: 'An unexpected error has occurred. There is no send verification code link in the flow.',\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.setState({ isResending: true });\r\n\r\n    return authActions.sendVerificationCode(sendVerificationCodeHref)\r\n      .then((newFlow) => {\r\n        this.setState({ errorMessage: '', isResending: false });\r\n        Promise.resolve(newFlow);\r\n      })\r\n      .catch((err) => {\r\n        this.setState({\r\n          errorMessage: 'Something went wrong when trying to resend a verification code.',\r\n          isResending: false,\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { verificationCode, isVerifying, errorMessage, isResending  } = this.state;\r\n    const { message } = this.props;\r\n\r\n    const isReady = !!verificationCode;\r\n\r\n    const alert = (errorMessage || message ) && (\r\n        (errorMessage || (message && message.isError)) ? (<div className=\"alert alert-danger\">{errorMessage ? errorMessage : message.content}</div>) :\r\n            <div className=\"alert alert-success\">{message.content}</div>\r\n    );\r\n\r\n    const spinnerMessage = isResending ? 'Resending verification code...' : 'Verifying...';\r\n\r\n    return isVerifying || isResending ?\r\n        <div className=\"alert alert-info\">\r\n          {spinnerMessage}\r\n          <span className=\"loader\"></span>\r\n        </div> :\r\n      (\r\n        <div>\r\n          <h1 className=\"heading\" data-id=\"verification-heading\">Thank You!</h1>\r\n          {alert}\r\n          <div className=\"input-field\">\r\n              <div className=\"alert alert-info\">\r\n              We&#39;ve sent a verification email to your email address.\r\n              Please verify your email to finish setting up your PingOne account.\r\n              </div>\r\n\r\n              <form className=\"form\" onSubmit={this.onSubmit}>\r\n                <div className=\"input-field\">\r\n                  <label>Verification Code</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"text-input\"\r\n                    id=\"verification-code\"\r\n                    name=\"verification-code\"\r\n                    placeholder=\"Verification Code\"\r\n                    value={verificationCode}\r\n                    onChange={this.handleVerificationCodeUpdate}\r\n                  />\r\n                </div>\r\n                <div className=\"input-field\">\r\n                  <button\r\n                      data-id=\"verify-button\"\r\n                      className=\"button\"\r\n                      onClick={this.handleSubmit}\r\n                      type=\"submit\"\r\n                      disabled={!isReady}>\r\n                    Verify\r\n                  </button>\r\n                </div>\r\n              </form>\r\n          </div>\r\n          <div className=\"input-field\">\r\n              Didn’t receive an email? <a data-id=\"resend-email\" href=\"#\" onClick={this.handleResendEmail}>Resend</a>\r\n            </div>\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nVerificationCode.propTypes = {\r\n  flow: PropTypes.instanceOf(Flow).isRequired,\r\n  authActions: PropTypes.shape({\r\n    updateFlow: PropTypes.func.isRequired,\r\n    sendVerificationCode: PropTypes.func.isRequired,\r\n    verifyUser: PropTypes.func.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default VerificationCode;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Redirect, Route } from \"react-router\";\r\nimport _ from \"lodash\";\r\nimport { getURLParameter } from \"../sdk/helpers\";\r\n\r\nimport UserLogin from \"./userLogin\";\r\nimport ForgotPassword from \"./forgotPassword\";\r\nimport MessageBlock from \"./message\";\r\nimport PasswordEditor from \"./updatePassword\";\r\nimport RecoveryCodeAndPasswordForm from \"./recoveryCodeAndPassword\";\r\nimport RegistrationForm from \"./registration\";\r\nimport VerificationCode from \"./verificationCode\";\r\n\r\nexport const PATH = {\r\n  SIGN_ON: \"/\",\r\n  EXPIRED: \"/expired\",\r\n  UNABLE_TO_SIGN_IN: \"/unableToSignIn\",\r\n  CHANGE_PASSWORD: \"/changePassword\",\r\n  REGISTER: \"/register\",\r\n  VERIFY: \"/verify\",\r\n  FORGOT_PASSWORD_USERNAME: \"/forgotPasswordUsername\",\r\n  RECOVERY_CODE_AND_PASSWORD: \"/recoveryCode\",\r\n};\r\n\r\n// Maps each initial status to list of compatible paths; 1st path in list is default\r\nexport const STATUS_TO_COMPATIBLE_PATHS = {\r\n  PASSWORD_EXPIRED: [PATH.EXPIRED],\r\n  MUST_CHANGE_PASSWORD: [PATH.CHANGE_PASSWORD],\r\n  USERNAME_PASSWORD_REQUIRED: [\r\n    PATH.SIGN_ON,\r\n    PATH.REGISTER,\r\n    PATH.VERIFY,\r\n    PATH.UNABLE_TO_SIGN_IN,\r\n    PATH.FORGOT_PASSWORD_USERNAME,\r\n  ],\r\n  PASSWORD_REQUIRED: [PATH.SIGN_ON],\r\n  RECOVERY_CODE_REQUIRED: [PATH.RECOVERY_CODE_AND_PASSWORD],\r\n  VERIFICATION_CODE_REQUIRED: [PATH.VERIFY],\r\n};\r\n\r\nclass Auth extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      errorMessage: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const environmentId = getURLParameter(\"environmentId\");\r\n    const flowId = getURLParameter(\"flowId\");\r\n    const error = getURLParameter(\"error\");\r\n    const uuidRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\r\n\r\n    if (error) {\r\n      this.setState({\r\n        errorMessage: JSON.parse(decodeURIComponent(error)),\r\n      });\r\n    } else if (!uuidRegex.test(environmentId)) {\r\n      this.setState({\r\n        errorMessage: `Invalid environmentId parameter: ${environmentId}. environmentId should be a valid UUID.`,\r\n      });\r\n    } else if (!error && !uuidRegex.test(flowId)) {\r\n      this.setState({\r\n        errorMessage: `Invalid flowId parameter: ${flowId}. flowId should be a valid UUID.`,\r\n      });\r\n    } else if (!this.props.authState.flow) {\r\n      this.props.authActions.getFlow(environmentId, flowId).catch((error) => {\r\n        if (_.isEqual(_.get(error, \"code\", null), \"NOT_FOUND\")) {\r\n          this.setState({\r\n            isSubmitting: false,\r\n            errorMessage: `There is no such flow resource with ${flowId} id.`,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            errorMessage:\r\n              \"An unexpected error has occurred while retrieving flow resource.\",\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { errorMessage } = this.state;\r\n    const { authState, location, branding } = this.props;\r\n\r\n    if (errorMessage) {\r\n      return <MessageBlock messageType={\"error\"} message={errorMessage} />;\r\n    }\r\n\r\n    const flow = _.get(authState, \"flow\", null);\r\n    const message = _.get(authState, \"message\", null);\r\n\r\n    if (flow && (flow.isCompleted() || flow.isFailed())) {\r\n      console.log(\"flow.resumeUrl\");\r\n      console.log(flow.resumeUrl);\r\n      // Redirect to the resume endpoint\r\n      window.location.assign(flow.resumeUrl);\r\n      window.history.replaceState({}, \"\", \"#done\");\r\n\r\n      return <p>done</p>;\r\n    }\r\n\r\n    if (flow) {\r\n      const currentViewPath =\r\n        STATUS_TO_COMPATIBLE_PATHS[_.get(flow, \"status\", \"unknown\")];\r\n      if (!currentViewPath) {\r\n        console.log(\"flow completed or failed\");\r\n        return (\r\n          <div>\r\n            <Redirect to={PATH.SIGN_ON} />\r\n          </div>\r\n        );\r\n      }\r\n      // Redirect to an appropriate component if all next paths do not start with the current path\r\n      else if (\r\n        !_.some(currentViewPath, (path) =>\r\n          _.startsWith(location.pathname, path)\r\n        )\r\n      ) {\r\n        return (\r\n          <div>\r\n            <Redirect to={currentViewPath[0]} />\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n\r\n    return (\r\n      flow && (\r\n        <div className=\"container\">\r\n          <div className=\"row routes\">\r\n            <Route\r\n              path={PATH.SIGN_ON}\r\n              exact\r\n              render={(routeProps) => (\r\n                <UserLogin\r\n                  {...routeProps}\r\n                  {...this.props}\r\n                  flow={flow}\r\n                  message={message}\r\n                />\r\n              )}\r\n            />\r\n            <Route\r\n              path={PATH.CHANGE_PASSWORD}\r\n              exact\r\n              render={(routeProps) => (\r\n                <PasswordEditor\r\n                  {...routeProps}\r\n                  {...this.props}\r\n                  flow={flow}\r\n                  message={message}\r\n                />\r\n              )}\r\n            />\r\n            <Route\r\n              path={PATH.FORGOT_PASSWORD_USERNAME}\r\n              exact\r\n              render={(routeProps) => (\r\n                <ForgotPassword\r\n                  {...routeProps}\r\n                  {...this.props}\r\n                  flow={flow}\r\n                  message={message}\r\n                />\r\n              )}\r\n            />\r\n            <Route\r\n              path={PATH.EXPIRED}\r\n              exact\r\n              render={(routeProps) => (\r\n                <PasswordEditor\r\n                  {...routeProps}\r\n                  {...this.props}\r\n                  flow={flow}\r\n                  message={message}\r\n                  feedbackMessage=\"Your password has expired. Please create a new one.\"\r\n                />\r\n              )}\r\n            />\r\n            <Route\r\n              path={PATH.REGISTER}\r\n              exact\r\n              render={(routeProps) => (\r\n                <RegistrationForm\r\n                  {...routeProps}\r\n                  {...this.props}\r\n                  flow={flow}\r\n                  message={message}\r\n                />\r\n              )}\r\n            />\r\n            <Route\r\n              path={PATH.VERIFY}\r\n              exact\r\n              render={(routeProps) => (\r\n                <VerificationCode\r\n                  {...routeProps}\r\n                  {...this.props}\r\n                  flow={flow}\r\n                  message={message}\r\n                />\r\n              )}\r\n            />\r\n            <Route\r\n              path={PATH.RECOVERY_CODE_AND_PASSWORD}\r\n              exact\r\n              render={(routeProps) => (\r\n                <RecoveryCodeAndPasswordForm\r\n                  {...routeProps}\r\n                  {...this.props}\r\n                  flow={flow}\r\n                  message={message}\r\n                />\r\n              )}\r\n            />\r\n            <Route\r\n              path={PATH.UNABLE_TO_SIGN_IN}\r\n              exact\r\n              component={MessageBlock}\r\n            />\r\n          </div>\r\n        </div>\r\n      )\r\n    );\r\n  }\r\n}\r\n\r\nAuth.propTypes = {\r\n  location: PropTypes.shape({}).isRequired,\r\n\r\n  branding: PropTypes.shape({\r\n    logo: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n\r\n  authActions: PropTypes.shape({\r\n    getFlow: PropTypes.func.isRequired,\r\n  }).isRequired,\r\n\r\n  authState: PropTypes.shape({\r\n    flow: PropTypes.shape({\r\n      status: PropTypes.string,\r\n    }),\r\n  }),\r\n};\r\n\r\nAuth.defaultProps = {\r\n  authState: null,\r\n};\r\n\r\nexport default Auth;\r\n","import _ from \"lodash\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport actions from \"../sdk/actions\";\r\nimport Auth from \"../components/auth\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n  authState: _.get(state, \"auth\", null),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  authActions: actions.bind(dispatch),\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Auth));\r\n","import authActions from '../sdk/actions';\r\n\r\nconst initialState = {\r\n  flow: null,\r\n  message: { isError: false, content: null },\r\n  isAuthenticated: false\r\n};\r\n\r\nconst reducer = (state = initialState, action = {}) => {\r\n  switch (action.type) {\r\n    case authActions.types.UPDATE_FLOW:\r\n      return {\r\n        ...state,\r\n        flow: action.payload.result,\r\n        isAuthenticated: action.payload.isAuthenticated,\r\n        message: { content : action.payload.message }\r\n      };\r\n\r\n    case authActions.types.UNRECOVERABLE_ERROR:\r\n      return {\r\n        ...state,\r\n        message: { isError: true, content : action.payload.error }\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default {\r\n  auth: reducer\r\n};\r\n","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"./index.css\";\r\nimport config from \"./config\";\r\nimport Container from \"./containers/container\";\r\nimport { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport freeze from \"redux-freeze\";\r\nimport reducer from \"./reducers/index\";\r\nimport { MemoryRouter } from \"react-router\";\r\n\r\nconst devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__\r\n  ? window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  : (f) => f;\r\nconst composeStore = compose(\r\n  applyMiddleware(thunk, freeze),\r\n  devToolsExtension\r\n)(createStore);\r\nconst store = composeStore(combineReducers(reducer));\r\n\r\nrender(\r\n  <Provider store={store}>\r\n    <MemoryRouter>\r\n      <Container {...config} />\r\n    </MemoryRouter>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}